1. Running translator
Second argument is a file name: use two translator arguments.
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 18 rules.
Computing model... [0.000s CPU, 0.005s wall-clock]
575 relevant atoms
571 auxiliary atoms
1146 final queue length
1272 total queue pushes
Completing instantiation... [0.010s CPU, 0.003s wall-clock]
Instantiating: [0.010s CPU, 0.010s wall-clock]
Computing fact groups...
Finding invariants...
3 initial candidates
Finding invariants: [0.000s CPU, 0.000s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
1 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.001s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.003s wall-clock]
63 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
Removed false proposition: 0 = <none of those>
0 operators removed
1 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.001s wall-clock]
Translator variables: 2
Translator derived variables: 0
Translator facts: 66
Translator goal facts: 2
Translator mutex groups: 1
Translator total mutex groups size: 64
Translator operators: 190
Translator axioms: 0
Translator task size: 957
Translator peak memory: 20096 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.020s CPU, 0.017s wall-clock]

2. Running preprocessor
Building causal graph...
The causal graph is not acyclic.
2 variables of 2 necessary
0 of 1 mutex groups necessary.
190 of 190 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor facts: 66
Preprocessor derived variables: 0
Preprocessor task size: 893
Writing output...
done


3. Running search
./planner_prp/src/search/downward ipc policy-repair --dump-policy 2
This is a unit task.
./planner_prp/src/search/downward-release --heuristic "h=ff(cost_type=1)" --search "lazy_greedy([h],preferred=[h])" --random-seed 814102613 --dump-policy 2 < output
Simplifying transitions... done!
Variables: 2
Bytes per state: 4

Total allotted time (s): 1800
Max time for core JIC (remaining used in final-round repairs): 1800
Max time for each of the 1 epochs: 1800

 !! Warning: Disabling the simplification of unary operators !!
 !!           to keep the non-deterministic planning sound.  !!
Switch from bucket-based to heap-based queue at key = 100, num_pushes = 52
Generated 127 state(s).
Dead ends: 0 state(s). (0 recorded)
climb p0 (1)
walk-on-beam_DETDUP_0 p0 p1 (1)
walk-on-beam_DETDUP_0 p1 p2 (1)
walk-on-beam_DETDUP_0 p2 p3 (1)
walk-on-beam_DETDUP_0 p3 p4 (1)
walk-on-beam_DETDUP_0 p4 p5 (1)
walk-on-beam_DETDUP_0 p5 p6 (1)
walk-on-beam_DETDUP_0 p6 p7 (1)
walk-on-beam_DETDUP_0 p7 p8 (1)
walk-on-beam_DETDUP_0 p8 p9 (1)
walk-on-beam_DETDUP_0 p9 p10 (1)
walk-on-beam_DETDUP_0 p10 p11 (1)
walk-on-beam_DETDUP_0 p11 p12 (1)
walk-on-beam_DETDUP_0 p12 p13 (1)
walk-on-beam_DETDUP_0 p13 p14 (1)
walk-on-beam_DETDUP_0 p14 p15 (1)
walk-on-beam_DETDUP_0 p15 p16 (1)
walk-on-beam_DETDUP_0 p16 p17 (1)
walk-on-beam_DETDUP_0 p17 p18 (1)
walk-on-beam_DETDUP_0 p18 p19 (1)
walk-on-beam_DETDUP_0 p19 p20 (1)
walk-on-beam_DETDUP_0 p20 p21 (1)
walk-on-beam_DETDUP_0 p21 p22 (1)
walk-on-beam_DETDUP_0 p22 p23 (1)
walk-on-beam_DETDUP_0 p23 p24 (1)
walk-on-beam_DETDUP_0 p24 p25 (1)
walk-on-beam_DETDUP_0 p25 p26 (1)
walk-on-beam_DETDUP_0 p26 p27 (1)
walk-on-beam_DETDUP_0 p27 p28 (1)
walk-on-beam_DETDUP_0 p28 p29 (1)
walk-on-beam_DETDUP_0 p29 p30 (1)
walk-on-beam_DETDUP_0 p30 p31 (1)
walk-on-beam_DETDUP_0 p31 p32 (1)
walk-on-beam_DETDUP_0 p32 p33 (1)
walk-on-beam_DETDUP_0 p33 p34 (1)
walk-on-beam_DETDUP_0 p34 p35 (1)
walk-on-beam_DETDUP_0 p35 p36 (1)
walk-on-beam_DETDUP_0 p36 p37 (1)
walk-on-beam_DETDUP_0 p37 p38 (1)
walk-on-beam_DETDUP_0 p38 p39 (1)
walk-on-beam_DETDUP_0 p39 p40 (1)
walk-on-beam_DETDUP_0 p40 p41 (1)
walk-on-beam_DETDUP_0 p41 p42 (1)
walk-on-beam_DETDUP_0 p42 p43 (1)
walk-on-beam_DETDUP_0 p43 p44 (1)
walk-on-beam_DETDUP_0 p44 p45 (1)
walk-on-beam_DETDUP_0 p45 p46 (1)
walk-on-beam_DETDUP_0 p46 p47 (1)
walk-on-beam_DETDUP_0 p47 p48 (1)
walk-on-beam_DETDUP_0 p48 p49 (1)
walk-on-beam_DETDUP_0 p49 p50 (1)
walk-on-beam_DETDUP_0 p50 p51 (1)
walk-on-beam_DETDUP_0 p51 p52 (1)
walk-on-beam_DETDUP_0 p52 p53 (1)
walk-on-beam_DETDUP_0 p53 p54 (1)
walk-on-beam_DETDUP_0 p54 p55 (1)
walk-on-beam_DETDUP_0 p55 p56 (1)
walk-on-beam_DETDUP_0 p56 p57 (1)
walk-on-beam_DETDUP_0 p57 p58 (1)
walk-on-beam_DETDUP_0 p58 p59 (1)
walk-on-beam_DETDUP_0 p59 p60 (1)
walk-on-beam_DETDUP_0 p60 p61 (1)
walk-on-beam_DETDUP_0 p61 p62 (1)
walk-on-beam_DETDUP_0 p62 p63 (1)
Plan length: 64 step(s).
Plan cost: 64
Initial search time: 0s
Initial total time: 0s


Creating the simulator...


Regressing the plan...


Generating an initial policy...


Computing just-in-time repairs...
Generated 63 state(s).
Dead ends: 0 state(s).

Could not close 0 of 1 open leaf states.
Investigated 192 states for the strong cyclic plan.
Went through another policy of score 0

Could not close 0 of 0 open leaf states.
Investigated 1 states for the strong cyclic plan.
Marking policy strong cyclic.
Went through another policy of score 1


Running a final SCD check...


Running the simulation...



                  -{ General Statistics }-

        FSAP Combination Count: 0
       Monotonicity violations: 0
             Successful states: 1000 +/- 0
                       Replans: 0 +/- 0
                       Actions: 1000 +/- 0
             Recorded Deadends: 0
            State-Action Pairs: 128
  Forbidden State-Action Pairs: 0
               Strongly Cyclic: True
                  Policy Score: 1
                     Succeeded: 0 / 1
 Depth limit (of 1000) reached: 1 / 1


                  -{ Timing Statistics }-

        Regression Computation: 0s
         Engine Initialization: 0s
                   Search Time: 0s
           Policy Construction: 0s
 Evaluating the policy quality: 1.99s
              Using the policy: 0.9s
          Just-in-case Repairs: 1.99s
                Simulator time: 0.01s
                    Total time: 2s



Dumping the policy and fsaps...
Strong cyclic plan found.
Peak memory: 5520 KB

If holds: var1:0 var0:60
Execute: goal / SC / d=0

If holds: var1:0 var0:59
Execute: walk-on-beam p62 p63 / SC / d=1

If holds: var1:0 var0:58
Execute: walk-on-beam p61 p62 / SC / d=2

If holds: var1:0 var0:57
Execute: walk-on-beam p60 p61 / SC / d=3

If holds: var1:0 var0:55
Execute: walk-on-beam p59 p60 / SC / d=4

If holds: var1:0 var0:54
Execute: walk-on-beam p58 p59 / SC / d=5

If holds: var1:0 var0:53
Execute: walk-on-beam p57 p58 / SC / d=6

If holds: var1:0 var0:52
Execute: walk-on-beam p56 p57 / SC / d=7

If holds: var1:0 var0:51
Execute: walk-on-beam p55 p56 / SC / d=8

If holds: var1:0 var0:50
Execute: walk-on-beam p54 p55 / SC / d=9

If holds: var1:0 var0:49
Execute: walk-on-beam p53 p54 / SC / d=10

If holds: var1:0 var0:48
Execute: walk-on-beam p52 p53 / SC / d=11

If holds: var1:0 var0:47
Execute: walk-on-beam p51 p52 / SC / d=12

If holds: var1:0 var0:46
Execute: walk-on-beam p50 p51 / SC / d=13

If holds: var1:0 var0:44
Execute: walk-on-beam p49 p50 / SC / d=14

If holds: var1:0 var0:43
Execute: walk-on-beam p48 p49 / SC / d=15

If holds: var1:0 var0:42
Execute: walk-on-beam p47 p48 / SC / d=16

If holds: var1:0 var0:41
Execute: walk-on-beam p46 p47 / SC / d=17

If holds: var1:0 var0:40
Execute: walk-on-beam p45 p46 / SC / d=18

If holds: var1:0 var0:39
Execute: walk-on-beam p44 p45 / SC / d=19

If holds: var1:0 var0:38
Execute: walk-on-beam p43 p44 / SC / d=20

If holds: var1:0 var0:37
Execute: walk-on-beam p42 p43 / SC / d=21

If holds: var1:0 var0:36
Execute: walk-on-beam p41 p42 / SC / d=22

If holds: var1:0 var0:35
Execute: walk-on-beam p40 p41 / SC / d=23

If holds: var1:0 var0:33
Execute: walk-on-beam p39 p40 / SC / d=24

If holds: var1:0 var0:32
Execute: walk-on-beam p38 p39 / SC / d=25

If holds: var1:0 var0:31
Execute: walk-on-beam p37 p38 / SC / d=26

If holds: var1:0 var0:30
Execute: walk-on-beam p36 p37 / SC / d=27

If holds: var1:0 var0:29
Execute: walk-on-beam p35 p36 / SC / d=28

If holds: var1:0 var0:28
Execute: walk-on-beam p34 p35 / SC / d=29

If holds: var1:0 var0:27
Execute: walk-on-beam p33 p34 / SC / d=30

If holds: var1:0 var0:26
Execute: walk-on-beam p32 p33 / SC / d=31

If holds: var1:0 var0:25
Execute: walk-on-beam p31 p32 / SC / d=32

If holds: var1:0 var0:24
Execute: walk-on-beam p30 p31 / SC / d=33

If holds: var1:0 var0:22
Execute: walk-on-beam p29 p30 / SC / d=34

If holds: var1:0 var0:21
Execute: walk-on-beam p28 p29 / SC / d=35

If holds: var1:0 var0:20
Execute: walk-on-beam p27 p28 / SC / d=36

If holds: var1:0 var0:19
Execute: walk-on-beam p26 p27 / SC / d=37

If holds: var1:0 var0:18
Execute: walk-on-beam p25 p26 / SC / d=38

If holds: var1:0 var0:17
Execute: walk-on-beam p24 p25 / SC / d=39

If holds: var1:0 var0:16
Execute: walk-on-beam p23 p24 / SC / d=40

If holds: var1:0 var0:15
Execute: walk-on-beam p22 p23 / SC / d=41

If holds: var1:0 var0:14
Execute: walk-on-beam p21 p22 / SC / d=42

If holds: var1:0 var0:13
Execute: walk-on-beam p20 p21 / SC / d=43

If holds: var1:0 var0:11
Execute: walk-on-beam p19 p20 / SC / d=44

If holds: var1:0 var0:10
Execute: walk-on-beam p18 p19 / SC / d=45

If holds: var1:0 var0:9
Execute: walk-on-beam p17 p18 / SC / d=46

If holds: var1:0 var0:8
Execute: walk-on-beam p16 p17 / SC / d=47

If holds: var1:0 var0:7
Execute: walk-on-beam p15 p16 / SC / d=48

If holds: var1:0 var0:6
Execute: walk-on-beam p14 p15 / SC / d=49

If holds: var1:0 var0:5
Execute: walk-on-beam p13 p14 / SC / d=50

If holds: var1:0 var0:4
Execute: walk-on-beam p12 p13 / SC / d=51

If holds: var1:0 var0:3
Execute: walk-on-beam p11 p12 / SC / d=52

If holds: var1:0 var0:2
Execute: walk-on-beam p10 p11 / SC / d=53

If holds: var1:0 var0:63
Execute: walk-on-beam p9 p10 / SC / d=54

If holds: var1:0 var0:62
Execute: walk-on-beam p8 p9 / SC / d=55

If holds: var1:0 var0:61
Execute: walk-on-beam p7 p8 / SC / d=56

If holds: var1:0 var0:56
Execute: walk-on-beam p6 p7 / SC / d=57

If holds: var1:0 var0:45
Execute: walk-on-beam p5 p6 / SC / d=58

If holds: var1:0 var0:34
Execute: walk-on-beam p4 p5 / SC / d=59

If holds: var1:0 var0:23
Execute: walk-on-beam p3 p4 / SC / d=60

If holds: var1:0 var0:12
Execute: walk-on-beam p2 p3 / SC / d=61

If holds: var1:0 var0:1
Execute: walk-on-beam p1 p2 / SC / d=62

If holds: var1:0 var0:0
Execute: walk-on-beam p0 p1 / SC / d=63

If holds: var1:1 var0:0
Execute: climb p0 / SC / d=64

If holds: var1:1 var0:1
Execute: walk p1 p0 / SC / d=65

If holds: var1:1 var0:12
Execute: walk p2 p1 / SC / d=66

If holds: var1:1 var0:23
Execute: walk p3 p2 / SC / d=67

If holds: var1:1 var0:34
Execute: walk p4 p3 / SC / d=68

If holds: var1:1 var0:45
Execute: walk p5 p4 / SC / d=69

If holds: var1:1 var0:56
Execute: walk p6 p5 / SC / d=70

If holds: var1:1 var0:61
Execute: walk p7 p6 / SC / d=71

If holds: var1:1 var0:62
Execute: walk p8 p7 / SC / d=72

If holds: var1:1 var0:63
Execute: walk p9 p8 / SC / d=73

If holds: var1:1 var0:2
Execute: walk p10 p9 / SC / d=74

If holds: var1:1 var0:3
Execute: walk p11 p10 / SC / d=75

If holds: var1:1 var0:4
Execute: walk p12 p11 / SC / d=76

If holds: var1:1 var0:5
Execute: walk p13 p12 / SC / d=77

If holds: var1:1 var0:6
Execute: walk p14 p13 / SC / d=78

If holds: var1:1 var0:7
Execute: walk p15 p14 / SC / d=79

If holds: var1:1 var0:8
Execute: walk p16 p15 / SC / d=80

If holds: var1:1 var0:9
Execute: walk p17 p16 / SC / d=81

If holds: var1:1 var0:10
Execute: walk p18 p17 / SC / d=82

If holds: var1:1 var0:11
Execute: walk p19 p18 / SC / d=83

If holds: var1:1 var0:13
Execute: walk p20 p19 / SC / d=84

If holds: var1:1 var0:14
Execute: walk p21 p20 / SC / d=85

If holds: var1:1 var0:15
Execute: walk p22 p21 / SC / d=86

If holds: var1:1 var0:16
Execute: walk p23 p22 / SC / d=87

If holds: var1:1 var0:17
Execute: walk p24 p23 / SC / d=88

If holds: var1:1 var0:18
Execute: walk p25 p24 / SC / d=89

If holds: var1:1 var0:19
Execute: walk p26 p25 / SC / d=90

If holds: var1:1 var0:20
Execute: walk p27 p26 / SC / d=91

If holds: var1:1 var0:21
Execute: walk p28 p27 / SC / d=92

If holds: var1:1 var0:22
Execute: walk p29 p28 / SC / d=93

If holds: var1:1 var0:24
Execute: walk p30 p29 / SC / d=94

If holds: var1:1 var0:25
Execute: walk p31 p30 / SC / d=95

If holds: var1:1 var0:26
Execute: walk p32 p31 / SC / d=96

If holds: var1:1 var0:27
Execute: walk p33 p32 / SC / d=97

If holds: var1:1 var0:28
Execute: walk p34 p33 / SC / d=98

If holds: var1:1 var0:29
Execute: walk p35 p34 / SC / d=99

If holds: var1:1 var0:30
Execute: walk p36 p35 / SC / d=100

If holds: var1:1 var0:31
Execute: walk p37 p36 / SC / d=101

If holds: var1:1 var0:32
Execute: walk p38 p37 / SC / d=102

If holds: var1:1 var0:33
Execute: walk p39 p38 / SC / d=103

If holds: var1:1 var0:35
Execute: walk p40 p39 / SC / d=104

If holds: var1:1 var0:36
Execute: walk p41 p40 / SC / d=105

If holds: var1:1 var0:37
Execute: walk p42 p41 / SC / d=106

If holds: var1:1 var0:38
Execute: walk p43 p42 / SC / d=107

If holds: var1:1 var0:39
Execute: walk p44 p43 / SC / d=108

If holds: var1:1 var0:40
Execute: walk p45 p44 / SC / d=109

If holds: var1:1 var0:41
Execute: walk p46 p45 / SC / d=110

If holds: var1:1 var0:42
Execute: walk p47 p46 / SC / d=111

If holds: var1:1 var0:43
Execute: walk p48 p47 / SC / d=112

If holds: var1:1 var0:44
Execute: walk p49 p48 / SC / d=113

If holds: var1:1 var0:46
Execute: walk p50 p49 / SC / d=114

If holds: var1:1 var0:47
Execute: walk p51 p50 / SC / d=115

If holds: var1:1 var0:48
Execute: walk p52 p51 / SC / d=116

If holds: var1:1 var0:49
Execute: walk p53 p52 / SC / d=117

If holds: var1:1 var0:50
Execute: walk p54 p53 / SC / d=118

If holds: var1:1 var0:51
Execute: walk p55 p54 / SC / d=119

If holds: var1:1 var0:52
Execute: walk p56 p55 / SC / d=120

If holds: var1:1 var0:53
Execute: walk p57 p56 / SC / d=121

If holds: var1:1 var0:54
Execute: walk p58 p57 / SC / d=122

If holds: var1:1 var0:55
Execute: walk p59 p58 / SC / d=123

If holds: var1:1 var0:57
Execute: walk p60 p59 / SC / d=124

If holds: var1:1 var0:58
Execute: walk p61 p60 / SC / d=125

If holds: var1:1 var0:59
Execute: walk p62 p61 / SC / d=126

If holds: var1:1 var0:60
Execute: walk p63 p62 / SC / d=127
