1. Running translator
Second argument is a file name: use two translator arguments.
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 35 rules.
Computing model... [0.010s CPU, 0.018s wall-clock]
2438 relevant atoms
2149 auxiliary atoms
4587 final queue length
6215 total queue pushes
Completing instantiation... [0.030s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.043s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
1 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.021s wall-clock]
10 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
Removed false proposition: 0 = <none of those>
Removed false proposition: 1 = <none of those>
Removed false proposition: 2 = <none of those>
Removed false proposition: 3 = <none of those>
Removed false proposition: 4 = <none of those>
Removed false proposition: 5 = <none of those>
Removed false proposition: 6 = <none of those>
Removed false proposition: 7 = <none of those>
0 operators removed
8 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Translator variables: 10
Translator derived variables: 0
Translator facts: 412
Translator goal facts: 2
Translator mutex groups: 10
Translator total mutex groups size: 417
Translator operators: 1674
Translator axioms: 0
Translator task size: 6801
Translator peak memory: 24364 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.079s wall-clock]

2. Running preprocessor
Building causal graph...
The causal graph is not acyclic.
10 variables of 10 necessary
1 of 10 mutex groups necessary.
1674 of 1674 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor facts: 412
Preprocessor derived variables: 0
Preprocessor task size: 6392
Writing output...
done


3. Running search
./planner_prp/src/search/downward ipc policy-repair --dump-policy 2
This is a unit task.
./planner_prp/src/search/downward-release --heuristic "h=ff(cost_type=1)" --search "lazy_greedy([h],preferred=[h])" --random-seed 814102613 --dump-policy 2 < output
Simplifying transitions... done!
Variables: 10
Bytes per state: 8

Total allotted time (s): 1800
Max time for core JIC (remaining used in final-round repairs): 1800
Max time for each of the 1 epochs: 1800

 !! Warning: Disabling the simplification of unary operators !!
 !!           to keep the non-deterministic planning sound.  !!
Generated 32 state(s).
Dead ends: 0 state(s). (0 recorded)
swim_DETDUP_0 l55-1 l51-2 (1)
Plan length: 1 step(s).
Plan cost: 1
Initial search time: 0s
Initial total time: 0s


Creating the simulator...


Regressing the plan...


Generating an initial policy...


Computing just-in-time repairs...
Generated 2650 state(s).
Dead ends: 0 state(s).
Failed to allocate memory. Released memory buffer.
Memory limit has been reached.
Peak memory: 7812500 KB
no_file