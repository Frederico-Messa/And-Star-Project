1. Running translator
Second argument is a file name: use two translator arguments.
Parsing...
Parsing: [0.000s CPU, 0.028s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 70 rules.
Computing model... [0.040s CPU, 0.040s wall-clock]
4692 relevant atoms
3650 auxiliary atoms
8342 final queue length
17566 total queue pushes
Completing instantiation... [0.070s CPU, 0.078s wall-clock]
Instantiating: [0.110s CPU, 0.122s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
11 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.003s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.003s wall-clock]
Translating task: [0.080s CPU, 0.082s wall-clock]
2450 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
Removed false proposition: 11 = Atom on(b1, b1)
Removed false proposition: 11 = <none of those>
Removed false proposition: 12 = Atom on(b10, b10)
Removed false proposition: 12 = <none of those>
Removed false proposition: 13 = Atom on(b2, b2)
Removed false proposition: 13 = <none of those>
Removed false proposition: 14 = Atom on(b3, b3)
Removed false proposition: 14 = <none of those>
Removed false proposition: 15 = Atom on(b4, b4)
Removed false proposition: 15 = <none of those>
Removed false proposition: 16 = Atom on(b5, b5)
Removed false proposition: 16 = <none of those>
Removed false proposition: 17 = Atom on(b6, b6)
Removed false proposition: 17 = <none of those>
Removed false proposition: 18 = Atom on(b7, b7)
Removed false proposition: 18 = <none of those>
Removed false proposition: 19 = Atom on(b8, b8)
Removed false proposition: 19 = <none of those>
Removed false proposition: 20 = Atom on(b9, b9)
Removed false proposition: 20 = <none of those>
0 operators removed
20 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Translator variables: 21
Translator derived variables: 0
Translator facts: 132
Translator goal facts: 15
Translator mutex groups: 11
Translator total mutex groups size: 121
Translator operators: 2630
Translator axioms: 0
Translator task size: 19939
Translator peak memory: 31488 KB
Writing output... [0.010s CPU, 0.014s wall-clock]
Done! [0.230s CPU, 0.265s wall-clock]

2. Running preprocessor
Building causal graph...
The causal graph is not acyclic.
21 variables of 21 necessary
1 of 11 mutex groups necessary.
2630 of 2630 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor facts: 132
Preprocessor derived variables: 0
Preprocessor task size: 19829
Writing output...
done


3. Running search
./planner_prp/src/search/downward ipc policy-repair --dump-policy 2
This is a unit task.
./planner_prp/src/search/downward-release --heuristic "h=ff(cost_type=1)" --search "lazy_greedy([h],preferred=[h])" --random-seed 814102613 --dump-policy 2 < output
Simplifying transitions... done!
Variables: 21
Bytes per state: 8

Total allotted time (s): 1800
Max time for core JIC (remaining used in final-round repairs): 1800
Max time for each of the 1 epochs: 1800

 !! Warning: Disabling the simplification of unary operators !!
 !!           to keep the non-deterministic planning sound.  !!
Generated 1031 state(s).
Dead ends: 0 state(s). (0 recorded)
pick-up_DETDUP_0 b2 b1 (1)
put-down b2 (1)
pick-up_DETDUP_0 b3 b8 (1)
put-on-block_DETDUP_0 b3 b6 (1)
pick-tower_DETDUP_1 b6 b9 b4 (1)
put-down b9 (1)
pick-up-from-table_DETDUP_1 b1 (1)
put-on-block_DETDUP_0 b1 b8 (1)
pick-tower_DETDUP_1 b7 b10 b5 (1)
put-tower-down b7 b10 (1)
pick-up_DETDUP_0 b7 b10 (1)
put-on-block_DETDUP_0 b7 b1 (1)
pick-up-from-table_DETDUP_1 b4 (1)
put-on-block_DETDUP_0 b4 b2 (1)
pick-tower_DETDUP_1 b3 b6 b9 (1)
put-on-block_DETDUP_0 b6 b10 (1)
pick-tower_DETDUP_1 b3 b6 b10 (1)
put-tower-down b3 b6 (1)
pick-up-from-table_DETDUP_1 b6 (1)
put-on-block_DETDUP_0 b6 b10 (1)
pick-tower_DETDUP_1 b7 b1 b8 (1)
put-on-block_DETDUP_0 b1 b8 (1)
pick-tower_DETDUP_1 b7 b1 b8 (1)
put-tower-down b7 b1 (1)
pick-up-from-table_DETDUP_1 b8 (1)
put-on-block_DETDUP_0 b8 b5 (1)
pick-up-from-table_DETDUP_1 b1 (1)
put-on-block_DETDUP_0 b1 b8 (1)
Plan length: 28 step(s).
Plan cost: 28
Initial search time: 0.01s
Initial total time: 0.03s


Creating the simulator...


Regressing the plan...


Generating an initial policy...


Computing just-in-time repairs...
Generated 11 state(s).
Dead ends: 0 state(s).
Generated 9 state(s).
Dead ends: 0 state(s).
Generated 11 state(s).
Dead ends: 0 state(s).
Generated 10 state(s).
Dead ends: 0 state(s).

Could not close 0 of 4 open leaf states.
Investigated 53 states for the strong cyclic plan.
Went through another policy of score 1

Could not close 0 of 0 open leaf states.
Investigated 1 states for the strong cyclic plan.
Marking policy strong cyclic.
Went through another policy of score 1


Running a final SCD check...


Running the simulation...
...achieved the goal!



                  -{ General Statistics }-

        FSAP Combination Count: 0
       Monotonicity violations: 0
             Successful states: 30 +/- 0
                       Replans: 0 +/- 0
                       Actions: 30 +/- 0
             Recorded Deadends: 0
            State-Action Pairs: 33
  Forbidden State-Action Pairs: 0
               Strongly Cyclic: True
                  Policy Score: 1
                     Succeeded: 1 / 1
 Depth limit (of 1000) reached: 0 / 1


                  -{ Timing Statistics }-

        Regression Computation: 0s
         Engine Initialization: 0s
                   Search Time: 0.01s
           Policy Construction: 0.01s
 Evaluating the policy quality: 0.01s
              Using the policy: 0.01s
          Just-in-case Repairs: 0.03s
                Simulator time: 0s
                    Total time: 0.05s



Dumping the policy and fsaps...
Strong cyclic plan found.
Peak memory: 12140 KB

If holds: var11:8 var12:10 var13:10 var16:10 var17:2 var19:6 var14:6 var15:3 var18:1 var20:10 var3:0 var4:0 var7:0 var9:0 var10:0
Execute: goal / SC / d=0

If holds: var8:0 var11:0 var12:10 var13:10 var16:10 var17:2 var19:6 var14:6 var15:3 var18:1 var20:10 var3:0 var4:0 var7:0 var9:0
Execute: put-on-block b1 b8 / SC / d=1

If holds: var0:0 var8:0 var11:10 var12:10 var13:10 var16:10 var17:2 var19:6 var14:6 var15:3 var18:1 var20:10 var3:0 var4:0 var7:0 var9:0 var10:0
Execute: pick-up-from-table b1 / SC / d=2

If holds: var0:0 var5:0 var11:10 var12:10 var13:10 var16:10 var17:2 var19:0 var14:6 var15:3 var18:1 var20:10 var3:0 var4:0 var7:0 var9:0
Execute: put-on-block b8 b5 / SC / d=3

If holds: var0:0 var5:0 var8:0 var11:10 var12:10 var13:10 var16:10 var17:2 var19:10 var14:6 var15:3 var18:1 var20:10 var3:0 var4:0 var7:0 var9:0 var10:0
Execute: pick-up-from-table b8 / SC / d=4

If holds: var0:0 var5:0 var8:0 var11:0 var12:10 var13:10 var16:10 var17:2 var19:10 var14:6 var15:3 var18:1 var20:10 var3:0 var4:0 var9:0
Execute: put-tower-down b7 b1 / SC / d=5

If holds: var0:0 var5:0 var11:8 var12:10 var13:10 var16:10 var17:2 var19:10 var14:6 var15:3 var18:1 var20:10 var3:0 var4:0 var9:0 var10:0
Execute: pick-tower b7 b1 b8 / SC / d=6

If holds: var5:0 var8:0 var11:0 var12:10 var13:10 var16:10 var17:2 var19:10 var14:6 var15:3 var18:1 var20:10 var3:0 var4:0 var9:0
Execute: put-on-block b1 b8 / SC / d=7

If holds: var5:0 var11:8 var12:10 var13:10 var16:10 var17:2 var19:10 var14:6 var15:3 var18:1 var20:10 var3:0 var4:0 var9:0 var10:0
Execute: pick-tower b7 b1 b8 / SC / d=8

If holds: var0:0 var5:0 var8:0 var11:10 var12:10 var13:10 var16:10 var17:2 var19:10 var14:6 var15:3 var18:1 var20:10 var3:0 var4:0 var9:0 var10:0
Execute: pick-up-from-table b1 / SC / d=8

If holds: var1:0 var5:0 var11:8 var12:10 var13:10 var16:10 var17:0 var19:10 var14:6 var15:3 var18:1 var20:10 var3:0 var4:0 var9:0
Execute: put-on-block b6 b10 / SC / d=9

If holds: var1:0 var5:0 var6:0 var11:8 var12:10 var13:10 var16:10 var17:10 var19:10 var14:6 var15:3 var18:1 var20:10 var3:0 var4:0 var9:0 var10:0
Execute: pick-up-from-table b6 / SC / d=10

If holds: var1:0 var5:0 var6:0 var11:8 var12:10 var13:10 var16:10 var17:0 var19:10 var14:6 var15:3 var18:1 var20:10 var4:0 var9:0
Execute: put-tower-down b3 b6 / SC / d=11

If holds: var5:0 var6:0 var11:8 var12:10 var13:10 var16:10 var17:2 var19:10 var14:6 var15:3 var18:1 var20:10 var4:0 var9:0 var10:0
Execute: pick-tower b3 b6 b10 / SC / d=12

If holds: var1:0 var5:0 var11:8 var12:10 var13:10 var16:10 var17:0 var19:10 var14:6 var15:3 var18:1 var20:10 var4:0 var9:0
Execute: put-on-block b6 b10 / SC / d=13

If holds: var1:0 var5:0 var11:8 var12:10 var13:10 var16:10 var17:9 var19:10 var14:6 var15:3 var18:1 var20:10 var4:0 var10:0
Execute: pick-tower b3 b6 b9 / SC / d=14

If holds: var1:0 var5:0 var6:0 var11:8 var12:10 var13:10 var16:10 var17:10 var19:10 var14:6 var15:3 var18:1 var20:10 var4:0 var9:0 var10:0
Execute: pick-up-from-table b6 / SC / d=14

If holds: var1:0 var2:0 var5:0 var11:8 var12:10 var13:10 var16:10 var17:9 var19:10 var14:6 var15:0 var18:1 var20:10
Execute: put-on-block b4 b2 / SC / d=15

If holds: var1:0 var2:0 var5:0 var11:8 var12:10 var13:10 var16:10 var17:9 var19:10 var14:6 var15:10 var18:1 var20:10 var4:0 var10:0
Execute: pick-up-from-table b4 / SC / d=16

If holds: var0:0 var1:0 var2:0 var5:0 var11:8 var12:10 var13:10 var16:10 var17:9 var19:10 var14:6 var15:10 var18:0 var20:10 var4:0
Execute: put-on-block b7 b1 / SC / d=17

If holds: var0:0 var2:0 var5:0 var11:8 var12:10 var13:10 var16:10 var17:9 var19:10 var14:6 var15:10 var18:2 var20:10 var4:0 var7:0 var10:0
Execute: pick-up b7 b10 / SC / d=18

If holds: var0:0 var1:0 var2:0 var5:0 var11:8 var12:10 var13:10 var16:10 var17:9 var19:10 var14:6 var15:10 var18:10 var20:10 var4:0 var7:0 var10:0
Execute: pick-up-from-table b7 / SC / d=18

If holds: var0:0 var2:0 var5:0 var11:8 var12:0 var13:10 var16:10 var17:9 var19:10 var14:6 var15:10 var18:2 var20:10 var4:0
Execute: put-tower-down b7 b10 / SC / d=19

If holds: var0:0 var2:0 var11:8 var12:5 var13:10 var16:10 var17:9 var19:10 var14:6 var15:10 var18:2 var20:10 var4:0 var10:0
Execute: pick-tower b7 b10 b5 / SC / d=20

If holds: var2:0 var8:0 var11:0 var12:5 var13:10 var16:10 var17:9 var19:10 var14:6 var15:10 var18:2 var20:10 var4:0
Execute: put-on-block b1 b8 / SC / d=21

If holds: var0:0 var2:0 var8:0 var11:10 var12:5 var13:10 var16:10 var17:9 var19:10 var14:6 var15:10 var18:2 var20:10 var4:0 var10:0
Execute: pick-up-from-table b1 / SC / d=22

If holds: var0:0 var2:0 var8:0 var11:10 var12:5 var13:10 var16:10 var17:9 var19:10 var14:6 var15:10 var18:2 var20:0 var4:0
Execute: put-down b9 / SC / d=23

If holds: var0:0 var2:0 var8:0 var11:10 var12:5 var13:10 var16:10 var17:9 var19:10 var14:6 var15:10 var18:2 var20:5 var10:0
Execute: pick-tower b6 b9 b4 / SC / d=24

If holds: var0:0 var2:0 var6:0 var8:0 var11:10 var12:5 var13:10 var16:10 var17:9 var19:10 var14:0 var15:10 var18:2 var20:5
Execute: put-on-block b3 b6 / SC / d=25

If holds: var0:0 var2:0 var6:0 var11:10 var12:5 var13:10 var16:10 var17:9 var19:10 var14:8 var15:10 var18:2 var20:5 var3:0 var10:0
Execute: pick-up b3 b8 / SC / d=26

If holds: var0:0 var2:0 var6:0 var8:0 var11:10 var12:5 var13:10 var16:10 var17:9 var19:10 var14:10 var15:10 var18:2 var20:5 var3:0 var10:0
Execute: pick-up-from-table b3 / SC / d=26

If holds: var0:0 var6:0 var11:10 var12:5 var13:0 var16:10 var17:9 var19:10 var14:8 var15:10 var18:2 var20:5 var3:0
Execute: put-down b2 / SC / d=27

If holds: var2:0 var6:0 var11:10 var12:5 var13:1 var16:10 var17:9 var19:10 var14:8 var15:10 var18:2 var20:5 var3:0 var10:0
Execute: pick-up b2 b1 / SC / d=28
