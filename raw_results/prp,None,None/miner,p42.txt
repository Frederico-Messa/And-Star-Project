1. Running translator
Second argument is a file name: use two translator arguments.
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 54 rules.
Computing model... [0.040s CPU, 0.036s wall-clock]
4893 relevant atoms
3515 auxiliary atoms
8408 final queue length
9933 total queue pushes
Completing instantiation... [0.040s CPU, 0.041s wall-clock]
Instantiating: [0.080s CPU, 0.082s wall-clock]
Computing fact groups...
Finding invariants...
17 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
12 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.003s wall-clock]
Translating task: [0.050s CPU, 0.047s wall-clock]
45 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
Removed false proposition: 11 = <none of those>
Removed false proposition: 12 = <none of those>
Removed false proposition: 13 = <none of those>
Removed false proposition: 14 = <none of those>
Removed false proposition: 15 = <none of those>
Removed false proposition: 16 = <none of those>
Removed false proposition: 17 = <none of those>
Removed false proposition: 18 = <none of those>
Removed false proposition: 19 = <none of those>
Removed false proposition: 20 = <none of those>
Removed false proposition: 21 = <none of those>
Removed false proposition: 22 = <none of those>
Removed false proposition: 23 = <none of those>
Removed false proposition: 24 = <none of those>
Removed false proposition: 25 = <none of those>
Removed false proposition: 27 = <none of those>
0 operators removed
16 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.008s wall-clock]
Translator variables: 28
Translator derived variables: 0
Translator facts: 1407
Translator goal facts: 2
Translator mutex groups: 18
Translator total mutex groups size: 1388
Translator operators: 2894
Translator axioms: 0
Translator task size: 17112
Translator peak memory: 30204 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [0.170s CPU, 0.165s wall-clock]

2. Running preprocessor
Building causal graph...
The causal graph is not acyclic.
28 variables of 28 necessary
0 of 18 mutex groups necessary.
2894 of 2894 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor facts: 1407
Preprocessor derived variables: 0
Preprocessor task size: 15724
Writing output...
done


3. Running search
./planner_prp/src/search/downward ipc policy-repair --dump-policy 2
This is a unit task.
./planner_prp/src/search/downward-release --heuristic "h=ff(cost_type=1)" --search "lazy_greedy([h],preferred=[h])" --random-seed 814102613 --dump-policy 2 < output
Simplifying transitions... done!
Variables: 28
Bytes per state: 16

Total allotted time (s): 1800
Max time for core JIC (remaining used in final-round repairs): 1800
Max time for each of the 1 epochs: 1800

 !! Warning: Disabling the simplification of unary operators !!
 !!           to keep the non-deterministic planning sound.  !!
Generated 30 state(s).
Dead ends: 0 state(s). (0 recorded)
pick-bad-gold-1_DETDUP_0 l11 (1)
move-person l11 l21 (1)
move-person l21 l31 (1)
pick-bad-gold-2_DETDUP_0 l31 (1)
move-person l31 l41 (1)
move-person l41 l42 (1)
pick-bad-gold-3_DETDUP_0 l42 (1)
Plan length: 7 step(s).
Plan cost: 7
Initial search time: 0s
Initial total time: 0.04s


Creating the simulator...


Regressing the plan...


Generating an initial policy...


Computing just-in-time repairs...
Generated 436 state(s).
Dead ends: 0 state(s).
Generated 86367 state(s).
Dead ends: 164 state(s). (4 recorded)

Could not close 0 of 1 open leaf states.
Investigated 1 states for the strong cyclic plan.
Went through another policy of score 1
Generated 434 state(s).
Dead ends: 0 state(s).
Generated 85204 state(s).
Dead ends: 0 state(s). (0 recorded)

Could not close 0 of 1 open leaf states.
Investigated 41 states for the strong cyclic plan.
Went through another policy of score 1

Could not close 0 of 0 open leaf states.
Investigated 1 states for the strong cyclic plan.
Marking policy strong cyclic.
Found a better policy of score 1


Running a final SCD check...


Running the simulation...
...achieved the goal!



                  -{ General Statistics }-

        FSAP Combination Count: 0
       Monotonicity violations: 0
             Successful states: 21 +/- 0
                       Replans: 0 +/- 0
                       Actions: 21 +/- 0
             Recorded Deadends: 7
            State-Action Pairs: 21
  Forbidden State-Action Pairs: 164
               Strongly Cyclic: True
                  Policy Score: 1
                     Succeeded: 1 / 1
 Depth limit (of 1000) reached: 0 / 1


                  -{ Timing Statistics }-

        Regression Computation: 0s
         Engine Initialization: 0s
                   Search Time: 1.33s
           Policy Construction: 0s
 Evaluating the policy quality: 0.04s
              Using the policy: 0s
          Just-in-case Repairs: 1.37s
                Simulator time: 0s
                    Total time: 1.41s



Dumping the policy and fsaps...
Strong cyclic plan found.
Peak memory: 25708 KB

If holds: var26:0 var11:3
Execute: goal / SC / d=0

If holds: var8:0 var0:0 var27:4 var26:0 var11:2
Execute: pick-good-gold-3 l105 / SC / d=1

If holds: var8:0 var0:0 var27:3 var26:0 var11:2
Execute: move-person l104 l105 / SC / d=2

If holds: var8:0 var0:0 var27:2 var26:0 var11:2
Execute: move-person l103 l104 / SC / d=3

If holds: var7:0 var8:0 var0:0 var27:2 var26:0 var11:1
Execute: pick-good-gold-2 l103 / SC / d=4

If holds: var7:0 var8:0 var0:0 var27:1 var26:0 var11:1
Execute: move-person l102 l103 / SC / d=5

If holds: var6:0 var7:0 var8:0 var0:0 var27:1 var26:0 var11:0
Execute: pick-good-gold-1 l102 / SC / d=6

If holds: var6:0 var7:0 var8:0 var0:0 var27:85 var26:0 var11:0
Execute: move-person l92 l102 / SC / d=7

If holds: var6:0 var7:0 var8:0 var0:0 var27:78 var26:0 var11:0
Execute: move-person l82 l92 / SC / d=8

If holds: var6:0 var7:0 var8:0 var0:0 var27:71 var26:0 var11:0
Execute: move-person l72 l82 / SC / d=9

If holds: var6:0 var7:0 var8:0 var0:0 var27:64 var26:0 var11:0
Execute: move-person l62 l72 / SC / d=10

If holds: var6:0 var7:0 var8:0 var0:0 var27:57 var26:0 var11:0
Execute: move-person l52 l62 / SC / d=11

If holds: var6:0 var7:0 var8:0 var0:0 var27:58 var26:0 var11:0
Execute: move-person l53 l52 / SC / d=12

If holds: var6:0 var7:0 var8:0 var0:0 var27:51 var26:0 var11:0
Execute: move-person l43 l53 / SC / d=13

If holds: var6:0 var7:0 var8:0 var0:0 var27:50 var26:0 var11:0
Execute: move-person l42 l43 / SC / d=14

If holds: var6:0 var7:0 var8:0 var0:0 var27:43 var26:0 var11:0
Execute: move-person l32 l42 / SC / d=15

If holds: var6:0 var7:0 var8:0 var0:0 var27:42 var26:0 var11:0
Execute: move-person l31 l32 / SC / d=16

If holds: var6:0 var7:0 var8:0 var0:0 var27:35 var26:0 var11:0
Execute: move-person l21 l31 / SC / d=17

If holds: var6:0 var7:0 var8:0 var0:0 var27:7 var26:0 var11:0
Execute: move-person l11 l21 / SC / d=18

If holds: var6:0 var7:0 var8:0 var27:7 var17:0 var26:0 var11:0
Execute: drop-rock-press l11 r14 / SC / d=19

If holds: var6:0 var7:0 var8:0 var27:7 var17:8 var26:0 var11:0
Execute: pick-rock l11 r14 / SC / d=20
