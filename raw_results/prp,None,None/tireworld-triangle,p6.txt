1. Running translator
Second argument is a file name: use two translator arguments.
Parsing...
Warning: Atom spare-in(l-13-1) is specified twice in initial state specification
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 14 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1210 relevant atoms
907 auxiliary atoms
2117 final queue length
2416 total queue pushes
Completing instantiation... [0.000s CPU, 0.006s wall-clock]
Instantiating: [0.010s CPU, 0.018s wall-clock]
Computing fact groups...
Finding invariants...
5 initial candidates
Finding invariants: [0.000s CPU, 0.000s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
54 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.007s wall-clock]
221 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
Removed false proposition: 54 = <none of those>
0 operators removed
1 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.001s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 199
Translator goal facts: 1
Translator mutex groups: 1
Translator total mutex groups size: 91
Translator operators: 389
Translator axioms: 0
Translator task size: 2123
Translator peak memory: 21068 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.030s CPU, 0.031s wall-clock]

2. Running preprocessor
Building causal graph...
The causal graph is not acyclic.
55 variables of 55 necessary
0 of 1 mutex groups necessary.
389 of 389 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor facts: 199
Preprocessor derived variables: 0
Preprocessor task size: 2032
Writing output...
done


3. Running search
./planner_prp/src/search/downward ipc policy-repair --dump-policy 2
This is a unit task.
./planner_prp/src/search/downward-release --heuristic "h=ff(cost_type=1)" --search "lazy_greedy([h],preferred=[h])" --random-seed 814102613 --dump-policy 2 < output
Simplifying transitions... done!
Variables: 55
Bytes per state: 8

Total allotted time (s): 1800
Max time for core JIC (remaining used in final-round repairs): 1800
Max time for each of the 1 epochs: 1800

 !! Warning: Disabling the simplification of unary operators !!
 !!           to keep the non-deterministic planning sound.  !!
Generated 48 state(s).
Dead ends: 0 state(s). (0 recorded)
move-car_DETDUP_0 l-1-1 l-1-2 (1)
move-car_DETDUP_0 l-1-2 l-1-3 (1)
move-car_DETDUP_0 l-1-3 l-1-4 (1)
move-car_DETDUP_0 l-1-4 l-1-5 (1)
move-car_DETDUP_0 l-1-5 l-1-6 (1)
move-car_DETDUP_0 l-1-6 l-1-7 (1)
move-car_DETDUP_0 l-1-7 l-1-8 (1)
move-car_DETDUP_0 l-1-8 l-1-9 (1)
move-car_DETDUP_0 l-1-9 l-1-10 (1)
move-car_DETDUP_0 l-1-10 l-1-11 (1)
move-car_DETDUP_0 l-1-11 l-1-12 (1)
move-car_DETDUP_0 l-1-12 l-1-13 (1)
Plan length: 12 step(s).
Plan cost: 12
Initial search time: 0s
Initial total time: 0s


Creating the simulator...


Regressing the plan...


Generating an initial policy...


Computing just-in-time repairs...
Generated 62 state(s).
Dead ends: 0 state(s).
Generated 5 state(s).
Dead ends: 5 state(s).
Generated 55 state(s).
Dead ends: 1 state(s). (1 recorded)
Generated 5 state(s).
Dead ends: 5 state(s).
Generated 45 state(s).
Dead ends: 1 state(s). (1 recorded)
Generated 5 state(s).
Dead ends: 5 state(s).
Generated 35 state(s).
Dead ends: 1 state(s). (1 recorded)
Generated 5 state(s).
Dead ends: 5 state(s).
Generated 25 state(s).
Dead ends: 1 state(s). (1 recorded)
Generated 5 state(s).
Dead ends: 5 state(s).
Generated 14 state(s).
Dead ends: 1 state(s). (1 recorded)

Could not close 0 of 29 open leaf states.
Investigated 70 states for the strong cyclic plan.
Went through another policy of score 1
Generated 71 state(s).
Dead ends: 0 state(s).

Could not close 0 of 24 open leaf states.
Investigated 73 states for the strong cyclic plan.
Went through another policy of score 1

Could not close 0 of 0 open leaf states.
Investigated 1 states for the strong cyclic plan.
Marking policy strong cyclic.
Found a better policy of score 1


Running a final SCD check...


Running the simulation...
...achieved the goal!



                  -{ General Statistics }-

        FSAP Combination Count: 0
       Monotonicity violations: 0
             Successful states: 40 +/- 0
                       Replans: 0 +/- 0
                       Actions: 40 +/- 0
             Recorded Deadends: 41
            State-Action Pairs: 71
  Forbidden State-Action Pairs: 133
               Strongly Cyclic: True
                  Policy Score: 1
                     Succeeded: 1 / 1
 Depth limit (of 1000) reached: 0 / 1


                  -{ Timing Statistics }-

        Regression Computation: 0s
         Engine Initialization: 0s
                   Search Time: 0s
           Policy Construction: 0s
 Evaluating the policy quality: 0.06s
              Using the policy: 0.04s
          Just-in-case Repairs: 0.07s
                Simulator time: 0s
                    Total time: 0.07s



Dumping the policy and fsaps...
Strong cyclic plan found.
Peak memory: 7636 KB

If holds: var54:4
Execute: goal / SC / d=0

If holds: var0:0 var54:26
Execute: move-car l-2-12 l-1-13 / SC / d=1

If holds: var13:0 var54:26
Execute: changetire l-2-12 / SC / d=2

If holds: var13:0 var0:0 var54:37
Execute: move-car l-3-11 l-2-12 / SC / d=2

If holds: var13:0 var23:0 var54:37
Execute: changetire l-3-11 / SC / d=3

If holds: var13:0 var23:0 var0:0 var54:47
Execute: move-car l-4-10 l-3-11 / SC / d=3

If holds: var13:0 var23:0 var25:0 var54:47
Execute: changetire l-4-10 / SC / d=4

If holds: var13:0 var23:0 var25:0 var0:0 var54:64
Execute: move-car l-5-9 l-4-10 / SC / d=4

If holds: var13:0 var23:0 var25:0 var35:0 var54:64
Execute: changetire l-5-9 / SC / d=5

If holds: var13:0 var23:0 var25:0 var35:0 var0:0 var54:72
Execute: move-car l-6-8 l-5-9 / SC / d=5

If holds: var13:0 var23:0 var25:0 var35:0 var43:0 var54:72
Execute: changetire l-6-8 / SC / d=6

If holds: var13:0 var23:0 var25:0 var35:0 var43:0 var0:0 var54:79
Execute: move-car l-7-7 l-6-8 / SC / d=6

If holds: var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var54:79
Execute: changetire l-7-7 / SC / d=7

If holds: var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var0:0 var54:85
Execute: move-car l-8-6 l-7-7 / SC / d=7

If holds: var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var54:85
Execute: changetire l-8-6 / SC / d=8

If holds: var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var0:0 var54:90
Execute: move-car l-9-5 l-8-6 / SC / d=8

If holds: var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var53:0 var54:90
Execute: changetire l-9-5 / SC / d=9

If holds: var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var53:0 var0:0 var54:16
Execute: move-car l-10-4 l-9-5 / SC / d=9

If holds: var4:0 var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var53:0 var54:16
Execute: changetire l-10-4 / SC / d=10

If holds: var4:0 var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var53:0 var0:0 var54:19
Execute: move-car l-11-3 l-10-4 / SC / d=10

If holds: var4:0 var6:0 var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var53:0 var54:19
Execute: changetire l-11-3 / SC / d=11

If holds: var4:0 var6:0 var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var53:0 var0:0 var54:21
Execute: move-car l-12-2 l-11-3 / SC / d=11

If holds: var4:0 var6:0 var8:0 var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var53:0 var54:21
Execute: changetire l-12-2 / SC / d=12

If holds: var4:0 var6:0 var8:0 var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var53:0 var0:0 var54:22
Execute: move-car l-13-1 l-12-2 / SC / d=12

If holds: var4:0 var6:0 var8:0 var9:0 var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var53:0 var54:22
Execute: changetire l-13-1 / SC / d=13

If holds: var4:0 var6:0 var8:0 var9:0 var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var53:0 var0:0 var54:20
Execute: move-car l-12-1 l-13-1 / SC / d=13

If holds: var4:0 var6:0 var7:0 var8:0 var9:0 var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var53:0 var54:20
Execute: changetire l-12-1 / SC / d=14

If holds: var4:0 var6:0 var7:0 var8:0 var9:0 var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var53:0 var0:0 var54:17
Execute: move-car l-11-1 l-12-1 / SC / d=14

If holds: var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var53:0 var54:17
Execute: changetire l-11-1 / SC / d=15

If holds: var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var53:0 var0:0 var54:13
Execute: move-car l-10-1 l-11-1 / SC / d=15

If holds: var1:0 var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var53:0 var54:13
Execute: changetire l-10-1 / SC / d=16

If holds: var1:0 var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var53:0 var0:0 var54:86
Execute: move-car l-9-1 l-10-1 / SC / d=16

If holds: var1:0 var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var52:0 var53:0 var54:86
Execute: changetire l-9-1 / SC / d=17

If holds: var1:0 var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var51:0 var52:0 var53:0 var0:0 var54:80
Execute: move-car l-8-1 l-9-1 / SC / d=17

If holds: var1:0 var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var46:0 var51:0 var52:0 var53:0 var54:80
Execute: changetire l-8-1 / SC / d=18

If holds: var1:0 var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var13:0 var23:0 var25:0 var35:0 var43:0 var45:0 var46:0 var51:0 var52:0 var53:0 var0:0 var54:73
Execute: move-car l-7-1 l-8-1 / SC / d=18

If holds: var1:0 var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var13:0 var23:0 var25:0 var35:0 var43:0 var44:0 var45:0 var46:0 var51:0 var52:0 var53:0 var54:73
Execute: changetire l-7-1 / SC / d=19

If holds: var1:0 var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var13:0 var23:0 var25:0 var35:0 var43:0 var44:0 var45:0 var46:0 var51:0 var52:0 var53:0 var0:0 var54:65
Execute: move-car l-6-1 l-7-1 / SC / d=19

If holds: var1:0 var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var13:0 var23:0 var25:0 var35:0 var36:0 var43:0 var44:0 var45:0 var46:0 var51:0 var52:0 var53:0 var54:65
Execute: changetire l-6-1 / SC / d=20

If holds: var1:0 var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var13:0 var23:0 var25:0 var35:0 var36:0 var43:0 var44:0 var45:0 var46:0 var51:0 var52:0 var53:0 var0:0 var54:56
Execute: move-car l-5-1 l-6-1 / SC / d=20

If holds: var1:0 var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var13:0 var23:0 var25:0 var34:0 var35:0 var36:0 var43:0 var44:0 var45:0 var46:0 var51:0 var52:0 var53:0 var54:56
Execute: changetire l-5-1 / SC / d=21

If holds: var1:0 var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var13:0 var23:0 var25:0 var34:0 var35:0 var36:0 var43:0 var44:0 var45:0 var46:0 var51:0 var52:0 var53:0 var0:0 var54:46
Execute: move-car l-4-1 l-5-1 / SC / d=21

If holds: var1:0 var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var13:0 var23:0 var24:0 var25:0 var34:0 var35:0 var36:0 var43:0 var44:0 var45:0 var46:0 var51:0 var52:0 var53:0 var54:46
Execute: changetire l-4-1 / SC / d=22

If holds: var1:0 var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var13:0 var23:0 var24:0 var25:0 var34:0 var35:0 var36:0 var43:0 var44:0 var45:0 var46:0 var51:0 var52:0 var53:0 var0:0 var54:35
Execute: move-car l-3-1 l-4-1 / SC / d=22

If holds: var1:0 var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var13:0 var22:0 var23:0 var24:0 var25:0 var34:0 var35:0 var36:0 var43:0 var44:0 var45:0 var46:0 var51:0 var52:0 var53:0 var54:35
Execute: changetire l-3-1 / SC / d=23

If holds: var1:0 var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var13:0 var22:0 var23:0 var24:0 var25:0 var34:0 var35:0 var36:0 var43:0 var44:0 var45:0 var46:0 var51:0 var52:0 var53:0 var0:0 var54:23
Execute: move-car l-2-1 l-3-1 / SC / d=23

If holds: var1:0 var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var10:0 var13:0 var22:0 var23:0 var24:0 var25:0 var34:0 var35:0 var36:0 var43:0 var44:0 var45:0 var46:0 var51:0 var52:0 var53:0 var54:23
Execute: changetire l-2-1 / SC / d=24

If holds: var1:0 var4:0 var5:0 var6:0 var7:0 var8:0 var9:0 var10:0 var13:0 var22:0 var23:0 var24:0 var25:0 var34:0 var35:0 var36:0 var43:0 var44:0 var45:0 var46:0 var51:0 var52:0 var53:0 var0:0 var54:0
Execute: move-car l-1-1 l-2-1 / SC / d=24

If holds: var0:0 var54:37
Execute: move-car l-3-11 l-2-12 / NSC / d=2

If holds: var0:0 var54:47
Execute: move-car l-4-10 l-3-11 / NSC / d=3

If holds: var0:0 var54:64
Execute: move-car l-5-9 l-4-10 / NSC / d=4

If holds: var0:0 var54:72
Execute: move-car l-6-8 l-5-9 / NSC / d=5

If holds: var0:0 var54:79
Execute: move-car l-7-7 l-6-8 / NSC / d=6

If holds: var0:0 var54:85
Execute: move-car l-8-6 l-7-7 / NSC / d=7

If holds: var0:0 var54:90
Execute: move-car l-9-5 l-8-6 / NSC / d=8

If holds: var0:0 var54:16
Execute: move-car l-10-4 l-9-5 / NSC / d=9

If holds: var0:0 var54:19
Execute: move-car l-11-3 l-10-4 / NSC / d=10

If holds: var0:0 var54:21
Execute: move-car l-12-2 l-11-3 / NSC / d=11

If holds: var0:0 var54:22
Execute: move-car l-13-1 l-12-2 / NSC / d=12

If holds: var0:0 var54:20
Execute: move-car l-12-1 l-13-1 / NSC / d=13

If holds: var0:0 var54:17
Execute: move-car l-11-1 l-12-1 / NSC / d=14

If holds: var0:0 var54:13
Execute: move-car l-10-1 l-11-1 / NSC / d=15

If holds: var0:0 var54:86
Execute: move-car l-9-1 l-10-1 / NSC / d=16

If holds: var0:0 var54:80
Execute: move-car l-8-1 l-9-1 / NSC / d=17

If holds: var0:0 var54:73
Execute: move-car l-7-1 l-8-1 / NSC / d=18

If holds: var0:0 var54:65
Execute: move-car l-6-1 l-7-1 / NSC / d=19

If holds: var0:0 var54:56
Execute: move-car l-5-1 l-6-1 / NSC / d=20

If holds: var0:0 var54:46
Execute: move-car l-4-1 l-5-1 / NSC / d=21

If holds: var0:0 var54:35
Execute: move-car l-3-1 l-4-1 / NSC / d=22

If holds: var0:0 var54:23
Execute: move-car l-2-1 l-3-1 / NSC / d=23

If holds: var0:0 var54:0
Execute: move-car l-1-1 l-2-1 / NSC / d=24
