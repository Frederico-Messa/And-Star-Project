1. Running translator
Second argument is a file name: use two translator arguments.
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 70 rules.
Computing model... [0.010s CPU, 0.004s wall-clock]
549 relevant atoms
524 auxiliary atoms
1073 final queue length
1301 total queue pushes
Completing instantiation... [0.000s CPU, 0.005s wall-clock]
Instantiating: [0.010s CPU, 0.012s wall-clock]
Computing fact groups...
Finding invariants...
21 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
17 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.006s wall-clock]
153 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
Removed false proposition: 0 = <none of those>
Removed false proposition: 1 = <none of those>
Removed false proposition: 2 = <none of those>
Removed false proposition: 3 = <none of those>
Removed false proposition: 4 = <none of those>
Removed false proposition: 5 = <none of those>
Removed false proposition: 6 = <none of those>
Removed false proposition: 7 = <none of those>
Removed false proposition: 8 = <none of those>
Removed false proposition: 9 = <none of those>
Removed false proposition: 10 = <none of those>
Removed false proposition: 11 = <none of those>
Removed false proposition: 12 = <none of those>
Removed false proposition: 13 = <none of those>
Removed false proposition: 17 = <none of those>
Removed false proposition: 18 = <none of those>
0 operators removed
16 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.001s wall-clock]
Translator variables: 33
Translator derived variables: 0
Translator facts: 104
Translator goal facts: 11
Translator mutex groups: 16
Translator total mutex groups size: 70
Translator operators: 308
Translator axioms: 0
Translator task size: 1675
Translator peak memory: 20344 KB
Writing output... [0.010s CPU, 0.001s wall-clock]
Done! [0.030s CPU, 0.025s wall-clock]

2. Running preprocessor
Building causal graph...
The causal graph is not acyclic.
33 variables of 33 necessary
0 of 16 mutex groups necessary.
308 of 308 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor facts: 104
Preprocessor derived variables: 0
Preprocessor task size: 1605
Writing output...
done


3. Running search
./planner_prp/src/search/downward ipc policy-repair --dump-policy 2
This is a unit task.
./planner_prp/src/search/downward-release --heuristic "h=ff(cost_type=1)" --search "lazy_greedy([h],preferred=[h])" --random-seed 814102613 --dump-policy 2 < output
Simplifying transitions... done!
Variables: 33
Bytes per state: 8

Total allotted time (s): 1800
Max time for core JIC (remaining used in final-round repairs): 1800
Max time for each of the 1 epochs: 1800

 !! Warning: Disabling the simplification of unary operators !!
 !!           to keep the non-deterministic planning sound.  !!
Generated 594 state(s).
Dead ends: 5 state(s). (1 recorded)
load-fire-unit f3 l3 (1)
treat-victim-at-hospital v6 l2 (1)
treat-victim-at-hospital v5 l2 (1)
treat-victim-at-hospital v4 l3 (1)
treat-victim-at-hospital v3 l3 (1)
treat-victim-at-hospital v2 l4 (1)
treat-victim-at-hospital v1 l4 (1)
unload-fire-unit_DETDUP_1 f3 l3 l1 (1)
load-fire-unit f3 l3 (1)
drive-fire-unit f3 l3 l1 (1)
treat-victim-on-scene-fire_DETDUP_1 f3 l1 v7 (1)
unload-fire-unit_DETDUP_1 f3 l1 l3 (1)
drive-fire-unit f3 l1 l3 (1)
load-fire-unit f3 l3 (1)
drive-fire-unit f3 l3 l1 (1)
unload-fire-unit_DETDUP_1 f3 l1 l2 (1)
drive-fire-unit f3 l1 l3 (1)
load-fire-unit f3 l3 (1)
drive-fire-unit f3 l3 l1 (1)
unload-fire-unit_DETDUP_1 f3 l1 l4 (1)
Plan length: 20 step(s).
Plan cost: 20
Initial search time: 0s
Initial total time: 0s


Creating the simulator...


Regressing the plan...


Generating an initial policy...


Computing just-in-time repairs...

Could not close 0 of 0 open leaf states.
Investigated 22 states for the strong cyclic plan.
Went through another policy of score 0
Generated 557 state(s).
Dead ends: 0 state(s).

Could not close 0 of 1 open leaf states.
Investigated 43 states for the strong cyclic plan.
Found a better policy of score 1

Could not close 0 of 0 open leaf states.
Investigated 19 states for the strong cyclic plan.
Marking policy strong cyclic.
Went through another policy of score 1


Running a final SCD check...


Running the simulation...
...achieved the goal!



                  -{ General Statistics }-

        FSAP Combination Count: 0
       Monotonicity violations: 2
             Successful states: 45 +/- 0
                       Replans: 0 +/- 0
                       Actions: 45 +/- 0
             Recorded Deadends: 4
            State-Action Pairs: 21
  Forbidden State-Action Pairs: 813
               Strongly Cyclic: True
                  Policy Score: 1
                     Succeeded: 1 / 1
 Depth limit (of 1000) reached: 0 / 1


                  -{ Timing Statistics }-

        Regression Computation: 0s
         Engine Initialization: 0s
                   Search Time: 0s
           Policy Construction: 0s
 Evaluating the policy quality: 3.66s
              Using the policy: 2.24s
          Just-in-case Repairs: 3.66s
                Simulator time: 0s
                    Total time: 3.66s



Dumping the policy and fsaps...
Strong cyclic plan found.
Peak memory: 8060 KB

If holds: var0:1 var1:1 var2:1 var3:1 var31:0 var30:0 var28:0 var26:0 var23:0 var21:0 var20:0
Execute: goal / SC / d=0

If holds: var6:0 var16:0 var0:1 var1:1 var2:1 var3:0 var31:0 var30:0 var28:0 var26:0 var23:0 var21:0 var20:0
Execute: unload-fire-unit f3 l1 l4 / SC / d=1

If holds: var6:2 var16:0 var0:1 var1:1 var2:1 var3:0 var31:0 var30:0 var28:0 var26:0 var23:0 var21:0 var20:0
Execute: drive-fire-unit f3 l3 l1 / SC / d=2

If holds: var6:2 var0:1 var1:1 var2:1 var3:0 var31:0 var30:0 var28:0 var26:0 var23:0 var21:0 var20:0
Execute: load-fire-unit f3 l3 / SC / d=3

If holds: var6:0 var0:1 var1:1 var2:1 var3:0 var31:0 var30:0 var28:0 var26:0 var23:0 var21:0 var20:0
Execute: drive-fire-unit f3 l1 l3 / SC / d=4

If holds: var6:0 var16:0 var0:1 var1:0 var2:1 var3:0 var31:0 var30:0 var28:0 var26:0 var23:0 var21:0 var20:0
Execute: unload-fire-unit f3 l1 l2 / SC / d=5

If holds: var6:2 var16:0 var0:1 var1:0 var2:1 var3:0 var31:0 var30:0 var28:0 var26:0 var23:0 var21:0 var20:0
Execute: drive-fire-unit f3 l3 l1 / SC / d=6

If holds: var6:2 var0:1 var1:0 var2:1 var3:0 var31:0 var30:0 var28:0 var26:0 var23:0 var21:0 var20:0
Execute: load-fire-unit f3 l3 / SC / d=7

If holds: var6:0 var0:1 var1:0 var2:1 var3:0 var31:0 var30:0 var28:0 var26:0 var23:0 var21:0 var20:0
Execute: drive-fire-unit f3 l1 l3 / SC / d=8

If holds: var6:0 var0:1 var1:0 var2:1 var3:0 var13:2 var32:0 var30:0 var28:0 var26:0 var23:0 var21:0 var20:0
Execute: treat-victim-on-scene-fire f3 l1 v7 / SC / d=9

If holds: var6:2 var0:1 var1:0 var2:1 var3:0 var13:2 var32:0 var30:0 var28:0 var26:0 var23:0 var21:0 var20:0
Execute: drive-fire-unit f3 l3 l1 / SC / d=10

If holds: var6:2 var16:0 var0:0 var1:0 var2:1 var3:0 var13:2 var32:0 var30:0 var28:0 var26:0 var23:0 var21:0 var20:0
Execute: unload-fire-unit f3 l3 l1 / SC / d=11

If holds: var6:2 var0:0 var1:0 var2:1 var3:0 var13:2 var32:0 var30:0 var28:0 var26:0 var23:0 var21:0 var20:0
Execute: load-fire-unit f3 l3 / SC / d=12

If holds: var6:2 var16:0 var0:0 var1:0 var2:0 var3:0 var13:2 var32:0 var30:0 var28:0 var26:0 var23:0 var21:0 var20:0
Execute: unload-fire-unit f3 l3 l3 / NSC / d=13

If holds: var6:2 var16:0 var0:0 var1:0 var2:0 var3:0 var13:2 var32:0 var30:0 var28:0 var26:0 var23:0 var21:0 var7:5
Execute: treat-victim-at-hospital v1 l4 / NSC / d=14

If holds: var6:2 var16:0 var0:0 var1:0 var2:0 var3:0 var13:2 var32:0 var30:0 var28:0 var26:0 var23:0 var8:5 var7:5
Execute: treat-victim-at-hospital v2 l4 / NSC / d=15

If holds: var6:2 var16:0 var0:0 var1:0 var2:0 var3:0 var13:2 var32:0 var30:0 var28:0 var26:0 var9:4 var8:5 var7:5
Execute: treat-victim-at-hospital v3 l3 / NSC / d=16

If holds: var6:2 var16:0 var0:0 var1:0 var2:0 var3:0 var13:2 var32:0 var30:0 var28:0 var10:4 var9:4 var8:5 var7:5
Execute: treat-victim-at-hospital v4 l3 / NSC / d=17

If holds: var6:2 var16:0 var0:0 var1:0 var2:0 var3:0 var13:2 var32:0 var30:0 var11:3 var10:4 var9:4 var8:5 var7:5
Execute: treat-victim-at-hospital v5 l2 / NSC / d=18

If holds: var6:2 var16:0 var0:0 var1:0 var2:0 var3:0 var13:2 var32:0 var12:3 var11:3 var10:4 var9:4 var8:5 var7:5
Execute: treat-victim-at-hospital v6 l2 / NSC / d=19

If holds: var6:2 var0:0 var1:0 var2:0 var3:0 var13:2 var32:0 var12:3 var11:3 var10:4 var9:4 var8:5 var7:5
Execute: load-fire-unit f3 l3 / NSC / d=20
