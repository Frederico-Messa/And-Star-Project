1. Running translator
Second argument is a file name: use two translator arguments.
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 70 rules.
Computing model... [0.010s CPU, 0.016s wall-clock]
2382 relevant atoms
1590 auxiliary atoms
3972 final queue length
5444 total queue pushes
Completing instantiation... [0.030s CPU, 0.025s wall-clock]
Instantiating: [0.050s CPU, 0.045s wall-clock]
Computing fact groups...
Finding invariants...
21 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.003s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.030s wall-clock]
485 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
Removed false proposition: None = Atom fire(l1)
Removed true proposition: None = Atom nfire(l1)
Removed false proposition: None = <none of those>
Removed false proposition: None = Atom fire(l10)
Removed true proposition: None = Atom nfire(l10)
Removed false proposition: None = <none of those>
Removed false proposition: None = Atom fire(l2)
Removed true proposition: None = Atom nfire(l2)
Removed false proposition: None = <none of those>
Removed false proposition: 0 = <none of those>
Removed false proposition: None = Atom fire(l4)
Removed true proposition: None = Atom nfire(l4)
Removed false proposition: None = <none of those>
Removed false proposition: 1 = <none of those>
Removed false proposition: None = Atom fire(l6)
Removed true proposition: None = Atom nfire(l6)
Removed false proposition: None = <none of those>
Removed false proposition: None = Atom fire(l7)
Removed true proposition: None = Atom nfire(l7)
Removed false proposition: None = <none of those>
Removed false proposition: 2 = <none of those>
Removed false proposition: None = Atom fire(l9)
Removed true proposition: None = Atom nfire(l9)
Removed false proposition: None = <none of those>
Removed false proposition: 3 = <none of those>
Removed false proposition: 4 = <none of those>
Removed false proposition: 5 = <none of those>
Removed false proposition: 6 = <none of those>
Removed false proposition: 7 = <none of those>
Removed false proposition: 8 = <none of those>
Removed false proposition: 9 = <none of those>
Removed false proposition: 10 = <none of those>
Removed false proposition: 11 = <none of those>
Removed false proposition: 12 = <none of those>
Removed false proposition: 20 = <none of those>
Removed false proposition: 21 = <none of those>
Removed false proposition: 22 = <none of those>
Removed false proposition: 23 = <none of those>
Removed false proposition: 24 = <none of those>
Removed false proposition: 25 = <none of those>
0 operators removed
40 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.004s wall-clock]
Translator variables: 32
Translator derived variables: 0
Translator facts: 210
Translator goal facts: 6
Translator mutex groups: 19
Translator total mutex groups size: 184
Translator operators: 1622
Translator axioms: 0
Translator task size: 7134
Translator peak memory: 24700 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.090s wall-clock]

2. Running preprocessor
Building causal graph...
The causal graph is not acyclic.
32 variables of 32 necessary
0 of 19 mutex groups necessary.
1622 of 1622 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor facts: 210
Preprocessor derived variables: 0
Preprocessor task size: 6950
Writing output...
done


3. Running search
./planner_prp/src/search/downward ipc policy-repair --dump-policy 2
This is a unit task.
./planner_prp/src/search/downward-release --heuristic "h=ff(cost_type=1)" --search "lazy_greedy([h],preferred=[h])" --random-seed 814102613 --dump-policy 2 < output
Simplifying transitions... done!
Variables: 32
Bytes per state: 12

Total allotted time (s): 1800
Max time for core JIC (remaining used in final-round repairs): 1800
Max time for each of the 1 epochs: 1800

 !! Warning: Disabling the simplification of unary operators !!
 !!           to keep the non-deterministic planning sound.  !!
Generated 1961 state(s).
Dead ends: 0 state(s). (0 recorded)
load-fire-unit f1 l9 (1)
treat-victim-at-hospital v2 l1 (1)
treat-victim-at-hospital v1 l4 (1)
unload-fire-unit_DETDUP_1 f1 l9 l3 (1)
load-fire-unit f1 l9 (1)
unload-fire-unit_DETDUP_1 f1 l9 l5 (1)
load-fire-unit f1 l9 (1)
unload-fire-unit_DETDUP_1 f1 l9 l8 (1)
drive-medical-unit m1 l9 l7 (1)
load-medical-unit m1 l7 v3 (1)
drive-medical-unit m1 l7 l10 (1)
unload-medical-unit m1 l10 v3 (1)
treat-victim-at-hospital v3 l10 (1)
Plan length: 13 step(s).
Plan cost: 13
Initial search time: 0s
Initial total time: 0.01s


Creating the simulator...


Regressing the plan...


Generating an initial policy...


Computing just-in-time repairs...

Could not close 0 of 0 open leaf states.
Investigated 11 states for the strong cyclic plan.
Marking policy strong cyclic.
Went through another policy of score 1


Running a final SCD check...


Running the simulation...
...achieved the goal!



                  -{ General Statistics }-

        FSAP Combination Count: 0
       Monotonicity violations: 0
             Successful states: 20 +/- 0
                       Replans: 0 +/- 0
                       Actions: 20 +/- 0
             Recorded Deadends: 0
            State-Action Pairs: 14
  Forbidden State-Action Pairs: 0
               Strongly Cyclic: True
                  Policy Score: 1
                     Succeeded: 1 / 1
 Depth limit (of 1000) reached: 0 / 1


                  -{ Timing Statistics }-

        Regression Computation: 0s
         Engine Initialization: 0s
                   Search Time: 0s
           Policy Construction: 0s
 Evaluating the policy quality: 0s
              Using the policy: 0s
          Just-in-case Repairs: 0s
                Simulator time: 0s
                    Total time: 0.01s



Dumping the policy and fsaps...
Strong cyclic plan found.
Peak memory: 8020 KB

If holds: var0:1 var1:1 var2:1 var31:0 var28:0 var26:0
Execute: goal / SC / d=0

If holds: var0:1 var1:1 var2:1 var12:7 var28:0 var26:0
Execute: treat-victim-at-hospital v3 l10 / SC / d=1

If holds: var0:1 var1:1 var2:1 var20:1 var12:0 var28:0 var26:0
Execute: unload-medical-unit m1 l10 v3 / SC / d=2

If holds: var0:1 var1:1 var2:1 var20:7 var12:0 var28:0 var26:0
Execute: drive-medical-unit m1 l7 l10 / SC / d=3

If holds: var0:1 var1:1 var2:1 var20:7 var12:13 var28:0 var26:0
Execute: load-medical-unit m1 l7 v3 / SC / d=4

If holds: var0:1 var1:1 var2:1 var20:9 var12:13 var28:0 var26:0
Execute: drive-medical-unit m1 l9 l7 / SC / d=5

If holds: var3:9 var13:0 var0:1 var1:1 var2:0 var20:9 var12:13 var28:0 var26:0
Execute: unload-fire-unit f1 l9 l8 / SC / d=6

If holds: var3:9 var0:1 var1:1 var2:0 var20:9 var12:13 var28:0 var26:0
Execute: load-fire-unit f1 l9 / SC / d=7

If holds: var3:9 var13:0 var0:1 var1:0 var2:0 var20:9 var12:13 var28:0 var26:0
Execute: unload-fire-unit f1 l9 l5 / SC / d=8

If holds: var3:9 var0:1 var1:0 var2:0 var20:9 var12:13 var28:0 var26:0
Execute: load-fire-unit f1 l9 / SC / d=9

If holds: var3:9 var13:0 var0:0 var1:0 var2:0 var20:9 var12:13 var28:0 var26:0
Execute: unload-fire-unit f1 l9 l3 / NSC / d=10

If holds: var3:9 var13:0 var0:0 var1:0 var2:0 var20:9 var12:13 var10:10 var28:0
Execute: treat-victim-at-hospital v1 l4 / NSC / d=11

If holds: var3:9 var13:0 var0:0 var1:0 var2:0 var20:9 var12:13 var11:6 var10:10
Execute: treat-victim-at-hospital v2 l1 / NSC / d=12

If holds: var3:9 var0:0 var1:0 var2:0 var20:9 var12:13 var11:6 var10:10
Execute: load-fire-unit f1 l9 / NSC / d=13
