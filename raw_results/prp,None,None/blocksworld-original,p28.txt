1. Running translator
Second argument is a file name: use two translator arguments.
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 70 rules.
Computing model... [0.110s CPU, 0.117s wall-clock]
14987 relevant atoms
10350 auxiliary atoms
25337 final queue length
55069 total queue pushes
Completing instantiation... [0.370s CPU, 0.368s wall-clock]
Instantiating: [0.490s CPU, 0.491s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
16 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.015s wall-clock]
Translating task: [0.330s CPU, 0.332s wall-clock]
8850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
Removed false proposition: 16 = Atom on(b1, b1)
Removed false proposition: 16 = <none of those>
Removed false proposition: 17 = Atom on(b10, b10)
Removed false proposition: 17 = <none of those>
Removed false proposition: 18 = Atom on(b11, b11)
Removed false proposition: 18 = <none of those>
Removed false proposition: 19 = Atom on(b12, b12)
Removed false proposition: 19 = <none of those>
Removed false proposition: 20 = Atom on(b13, b13)
Removed false proposition: 20 = <none of those>
Removed false proposition: 21 = Atom on(b14, b14)
Removed false proposition: 21 = <none of those>
Removed false proposition: 22 = Atom on(b15, b15)
Removed false proposition: 22 = <none of those>
Removed false proposition: 23 = Atom on(b2, b2)
Removed false proposition: 23 = <none of those>
Removed false proposition: 24 = Atom on(b3, b3)
Removed false proposition: 24 = <none of those>
Removed false proposition: 25 = Atom on(b4, b4)
Removed false proposition: 25 = <none of those>
Removed false proposition: 26 = Atom on(b5, b5)
Removed false proposition: 26 = <none of those>
Removed false proposition: 27 = Atom on(b6, b6)
Removed false proposition: 27 = <none of those>
Removed false proposition: 28 = Atom on(b7, b7)
Removed false proposition: 28 = <none of those>
Removed false proposition: 29 = Atom on(b8, b8)
Removed false proposition: 29 = <none of those>
Removed false proposition: 30 = Atom on(b9, b9)
Removed false proposition: 30 = <none of those>
0 operators removed
30 propositions removed
Detecting unreachable propositions: [0.040s CPU, 0.047s wall-clock]
Translator variables: 31
Translator derived variables: 0
Translator facts: 272
Translator goal facts: 21
Translator mutex groups: 16
Translator total mutex groups size: 256
Translator operators: 9270
Translator axioms: 0
Translator task size: 70480
Translator peak memory: 62464 KB
Writing output... [0.040s CPU, 0.048s wall-clock]
Done! [0.940s CPU, 0.946s wall-clock]

2. Running preprocessor
Building causal graph...
The causal graph is not acyclic.
31 variables of 31 necessary
1 of 16 mutex groups necessary.
9270 of 9270 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor facts: 272
Preprocessor derived variables: 0
Preprocessor task size: 70240
Writing output...
done


3. Running search
./planner_prp/src/search/downward ipc policy-repair --dump-policy 2
This is a unit task.
./planner_prp/src/search/downward-release --heuristic "h=ff(cost_type=1)" --search "lazy_greedy([h],preferred=[h])" --random-seed 814102613 --dump-policy 2 < output
Simplifying transitions... done!
Variables: 31
Bytes per state: 12

Total allotted time (s): 1800
Max time for core JIC (remaining used in final-round repairs): 1800
Max time for each of the 1 epochs: 1800

 !! Warning: Disabling the simplification of unary operators !!
 !!           to keep the non-deterministic planning sound.  !!
Generated 1219 state(s).
Dead ends: 0 state(s). (0 recorded)
pick-tower_DETDUP_1 b4 b1 b6 (1)
put-down b1 (1)
pick-tower_DETDUP_1 b12 b5 b3 (1)
put-down b5 (1)
pick-up_DETDUP_0 b14 b8 (1)
put-on-block_DETDUP_0 b14 b5 (1)
pick-tower_DETDUP_1 b13 b10 b4 (1)
put-down b10 (1)
pick-tower_DETDUP_1 b11 b9 b13 (1)
put-down b9 (1)
pick-up_DETDUP_1 b13 b10 (1)
pick-up_DETDUP_0 b7 b15 (1)
put-on-block_DETDUP_0 b7 b4 (1)
pick-up-from-table_DETDUP_1 b15 (1)
put-on-block_DETDUP_0 b15 b8 (1)
pick-up_DETDUP_0 b3 b2 (1)
put-on-block_DETDUP_0 b3 b15 (1)
pick-tower_DETDUP_1 b15 b8 b12 (1)
put-on-block_DETDUP_0 b8 b7 (1)
pick-up_DETDUP_0 b12 b5 (1)
put-on-block_DETDUP_0 b12 b2 (1)
pick-up-from-table_DETDUP_1 b6 (1)
put-on-block_DETDUP_0 b6 b14 (1)
Plan length: 23 step(s).
Plan cost: 23
Initial search time: 0.02s
Initial total time: 0.11s


Creating the simulator...


Regressing the plan...


Generating an initial policy...


Computing just-in-time repairs...
Generated 20 state(s).
Dead ends: 0 state(s).
Generated 19 state(s).
Dead ends: 0 state(s).
Generated 18 state(s).
Dead ends: 0 state(s).
Generated 18 state(s).
Dead ends: 0 state(s).
Generated 19 state(s).
Dead ends: 0 state(s).
Generated 17 state(s).
Dead ends: 0 state(s).

Could not close 0 of 6 open leaf states.
Investigated 55 states for the strong cyclic plan.
Went through another policy of score 1

Could not close 0 of 0 open leaf states.
Investigated 1 states for the strong cyclic plan.
Marking policy strong cyclic.
Went through another policy of score 1


Running a final SCD check...


Running the simulation...
...achieved the goal!



                  -{ General Statistics }-

        FSAP Combination Count: 0
       Monotonicity violations: 0
             Successful states: 46 +/- 0
                       Replans: 0 +/- 0
                       Actions: 46 +/- 0
             Recorded Deadends: 0
            State-Action Pairs: 30
  Forbidden State-Action Pairs: 0
               Strongly Cyclic: True
                  Policy Score: 1
                     Succeeded: 1 / 1
 Depth limit (of 1000) reached: 0 / 1


                  -{ Timing Statistics }-

        Regression Computation: 0s
         Engine Initialization: 0s
                   Search Time: 0.03s
           Policy Construction: 0.02s
 Evaluating the policy quality: 0.03s
              Using the policy: 0.01s
          Just-in-case Repairs: 0.07s
                Simulator time: 0s
                    Total time: 0.16s



Dumping the policy and fsaps...
Strong cyclic plan found.
Peak memory: 34712 KB

If holds: var16:15 var18:14 var21:10 var22:13 var23:3 var25:1 var26:15 var28:10 var29:13 var30:15 var17:15 var19:7 var20:15 var24:7 var27:6 var1:0 var3:0 var4:0 var8:0 var11:0 var15:0
Execute: goal / SC / d=0

If holds: var5:0 var16:15 var18:14 var21:10 var22:13 var23:3 var25:1 var26:15 var28:10 var29:13 var30:15 var17:15 var19:7 var20:15 var24:7 var27:0 var1:0 var3:0 var4:0 var8:0
Execute: put-on-block b6 b14 / SC / d=1

If holds: var5:0 var16:15 var18:14 var21:10 var22:13 var23:3 var25:1 var26:15 var28:10 var29:13 var30:15 var17:15 var19:7 var20:15 var24:7 var27:15 var1:0 var3:0 var4:0 var8:0 var11:0 var15:0
Execute: pick-up-from-table b6 / SC / d=2

If holds: var5:0 var7:0 var16:15 var18:14 var21:10 var22:13 var23:3 var25:1 var26:15 var28:10 var29:13 var30:15 var17:15 var19:0 var20:15 var24:7 var27:15 var1:0 var4:0 var8:0 var11:0
Execute: put-on-block b12 b2 / SC / d=3

If holds: var5:0 var7:0 var16:15 var18:14 var21:10 var22:13 var23:3 var25:1 var26:15 var28:10 var29:13 var30:15 var17:15 var19:10 var20:15 var24:7 var27:15 var1:0 var3:0 var4:0 var8:0 var11:0 var15:0
Execute: pick-up b12 b5 / SC / d=4

If holds: var5:0 var7:0 var16:15 var18:14 var21:10 var22:13 var23:3 var25:1 var26:15 var28:10 var29:13 var30:15 var17:15 var19:15 var20:15 var24:7 var27:15 var1:0 var3:0 var4:0 var8:0 var11:0 var15:0
Execute: pick-up-from-table b12 / SC / d=4

If holds: var5:0 var7:0 var12:0 var16:15 var18:14 var21:10 var22:13 var23:3 var25:1 var26:15 var28:10 var29:0 var30:15 var17:15 var19:10 var20:15 var24:7 var27:15 var1:0 var3:0 var4:0 var8:0 var11:0
Execute: put-on-block b8 b7 / SC / d=5

If holds: var5:0 var7:0 var12:0 var16:15 var18:14 var21:10 var22:13 var23:3 var25:1 var26:15 var28:10 var29:4 var30:15 var17:15 var19:10 var20:15 var24:7 var27:15 var1:0 var4:0 var8:0 var11:0 var15:0
Execute: pick-tower b15 b8 b12 / SC / d=6

If holds: var5:0 var7:0 var12:0 var13:0 var16:15 var18:14 var21:10 var22:13 var23:3 var25:1 var26:15 var28:10 var29:15 var30:15 var17:15 var19:10 var20:15 var24:7 var27:15 var1:0 var3:0 var4:0 var8:0 var11:0 var15:0
Execute: pick-up-from-table b8 / SC / d=6

If holds: var5:0 var6:0 var7:0 var12:0 var16:15 var18:14 var21:10 var22:13 var23:3 var25:1 var26:15 var28:10 var29:4 var30:15 var17:15 var19:10 var20:15 var24:0 var27:15 var1:0 var4:0 var11:0
Execute: put-on-block b3 b15 / SC / d=7

If holds: var5:0 var6:0 var12:0 var16:15 var18:14 var21:10 var22:13 var23:3 var25:1 var26:15 var28:10 var29:4 var30:15 var17:15 var19:10 var20:15 var24:8 var27:15 var1:0 var4:0 var8:0 var11:0 var15:0
Execute: pick-up b3 b2 / SC / d=8

If holds: var5:0 var6:0 var7:0 var12:0 var16:15 var18:14 var21:10 var22:13 var23:3 var25:1 var26:15 var28:10 var29:4 var30:15 var17:15 var19:10 var20:15 var24:15 var27:15 var1:0 var4:0 var8:0 var11:0 var15:0
Execute: pick-up-from-table b3 / SC / d=8

If holds: var5:0 var12:0 var13:0 var16:15 var18:14 var21:10 var22:0 var23:3 var25:1 var26:15 var28:10 var29:4 var30:15 var17:15 var19:10 var20:15 var24:8 var27:15 var1:0 var4:0 var8:0 var11:0
Execute: put-on-block b15 b8 / SC / d=9

If holds: var5:0 var6:0 var12:0 var13:0 var16:15 var18:14 var21:10 var22:15 var23:3 var25:1 var26:15 var28:10 var29:4 var30:15 var17:15 var19:10 var20:15 var24:8 var27:15 var1:0 var4:0 var8:0 var11:0 var15:0
Execute: pick-up-from-table b15 / SC / d=10

If holds: var5:0 var6:0 var9:0 var13:0 var16:15 var18:14 var21:10 var22:15 var23:3 var25:1 var26:15 var28:0 var29:4 var30:15 var17:15 var19:10 var20:15 var24:8 var27:15 var1:0 var4:0 var8:0 var11:0
Execute: put-on-block b7 b4 / SC / d=11

If holds: var5:0 var9:0 var12:0 var13:0 var16:15 var18:14 var21:10 var22:15 var23:3 var25:1 var26:15 var28:7 var29:4 var30:15 var17:15 var19:10 var20:15 var24:8 var27:15 var1:0 var4:0 var8:0 var11:0 var15:0
Execute: pick-up b7 b15 / SC / d=12

If holds: var5:0 var6:0 var9:0 var12:0 var13:0 var16:15 var18:14 var21:10 var22:15 var23:3 var25:1 var26:15 var28:15 var29:4 var30:15 var17:15 var19:10 var20:15 var24:8 var27:15 var1:0 var4:0 var8:0 var11:0 var15:0
Execute: pick-up-from-table b7 / SC / d=12

If holds: var5:0 var9:0 var12:0 var13:0 var16:15 var18:14 var21:10 var22:15 var23:3 var25:1 var26:15 var28:7 var29:4 var30:15 var17:15 var19:10 var20:2 var24:8 var27:15 var4:0 var8:0 var11:0 var15:0
Execute: pick-up b13 b10 / SC / d=13

If holds: var5:0 var9:0 var12:0 var13:0 var16:15 var18:14 var21:10 var22:15 var23:3 var25:1 var26:15 var28:7 var29:4 var30:15 var17:15 var19:10 var20:0 var24:8 var27:15 var1:0 var8:0 var11:0
Execute: put-down b13 / SC / d=13

If holds: var5:0 var9:0 var12:0 var13:0 var16:15 var18:14 var21:10 var22:15 var23:3 var25:1 var26:15 var28:7 var29:4 var30:0 var17:15 var19:10 var20:2 var24:8 var27:15 var4:0 var8:0 var11:0
Execute: put-down b9 / SC / d=14

If holds: var5:0 var9:0 var12:0 var13:0 var16:15 var18:14 var21:10 var22:15 var23:3 var25:1 var26:15 var28:7 var29:4 var30:5 var17:15 var19:10 var20:2 var24:8 var27:15 var8:0 var11:0 var15:0
Execute: pick-tower b11 b9 b13 / SC / d=15

If holds: var5:0 var9:0 var12:0 var13:0 var16:15 var18:14 var21:10 var22:15 var23:3 var25:1 var26:15 var28:7 var29:4 var30:5 var17:0 var19:10 var20:2 var24:8 var27:15 var8:0 var11:0
Execute: put-down b10 / SC / d=16

If holds: var5:0 var12:0 var13:0 var16:15 var18:14 var21:10 var22:15 var23:3 var25:1 var26:15 var28:7 var29:4 var30:5 var17:9 var19:10 var20:2 var24:8 var27:15 var8:0 var11:0 var15:0
Execute: pick-tower b13 b10 b4 / SC / d=17

If holds: var10:0 var12:0 var13:0 var16:15 var18:14 var21:0 var22:15 var23:3 var25:1 var26:15 var28:7 var29:4 var30:5 var17:9 var19:10 var20:2 var24:8 var27:15 var8:0 var11:0
Execute: put-on-block b14 b5 / SC / d=18

If holds: var5:0 var10:0 var12:0 var16:15 var18:14 var21:13 var22:15 var23:3 var25:1 var26:15 var28:7 var29:4 var30:5 var17:9 var19:10 var20:2 var24:8 var27:15 var8:0 var11:0 var15:0
Execute: pick-up b14 b8 / SC / d=19

If holds: var5:0 var10:0 var12:0 var13:0 var16:15 var18:14 var21:15 var22:15 var23:3 var25:1 var26:15 var28:7 var29:4 var30:5 var17:9 var19:10 var20:2 var24:8 var27:15 var8:0 var11:0 var15:0
Execute: pick-up-from-table b14 / SC / d=19

If holds: var5:0 var12:0 var16:15 var18:14 var21:13 var22:15 var23:3 var25:1 var26:0 var28:7 var29:4 var30:5 var17:9 var19:10 var20:2 var24:8 var27:15 var8:0 var11:0
Execute: put-down b5 / SC / d=20

If holds: var5:0 var12:0 var16:15 var18:14 var21:13 var22:15 var23:3 var25:1 var26:9 var28:7 var29:4 var30:5 var17:9 var19:10 var20:2 var24:8 var27:15 var11:0 var15:0
Execute: pick-tower b12 b5 b3 / SC / d=21

If holds: var5:0 var12:0 var16:0 var18:14 var21:13 var22:15 var23:3 var25:1 var26:9 var28:7 var29:4 var30:5 var17:9 var19:10 var20:2 var24:8 var27:15 var11:0
Execute: put-down b1 / SC / d=22

If holds: var5:0 var12:0 var16:11 var18:14 var21:13 var22:15 var23:3 var25:1 var26:9 var28:7 var29:4 var30:5 var17:9 var19:10 var20:2 var24:8 var27:15 var15:0
Execute: pick-tower b4 b1 b6 / SC / d=23
