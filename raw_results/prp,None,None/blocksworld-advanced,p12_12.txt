1. Running translator
Second argument is a file name: use two translator arguments.
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 67 rules.
Computing model... [0.060s CPU, 0.059s wall-clock]
7886 relevant atoms
5796 auxiliary atoms
13682 final queue length
25661 total queue pushes
Completing instantiation... [0.150s CPU, 0.154s wall-clock]
Instantiating: [0.210s CPU, 0.217s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.003s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.009s wall-clock]
Translating task: [0.150s CPU, 0.153s wall-clock]
3588 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
Removed false proposition: 13 = <none of those>
Removed false proposition: 14 = <none of those>
Removed false proposition: 15 = <none of those>
Removed false proposition: 16 = <none of those>
Removed false proposition: 17 = <none of those>
Removed false proposition: 18 = <none of those>
Removed false proposition: 19 = <none of those>
Removed false proposition: 20 = <none of those>
Removed false proposition: 21 = <none of those>
Removed false proposition: 22 = <none of those>
Removed false proposition: 23 = <none of those>
Removed false proposition: 24 = <none of those>
0 operators removed
12 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 194
Translator goal facts: 16
Translator mutex groups: 13
Translator total mutex groups size: 181
Translator operators: 5472
Translator axioms: 0
Translator task size: 36644
Translator peak memory: 43448 KB
Writing output... [0.030s CPU, 0.025s wall-clock]
Done! [0.430s CPU, 0.432s wall-clock]

2. Running preprocessor
Building causal graph...
The causal graph is not acyclic.
25 variables of 25 necessary
1 of 13 mutex groups necessary.
5472 of 5472 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor facts: 194
Preprocessor derived variables: 0
Preprocessor task size: 36476
Writing output...
done


3. Running search
./planner_prp/src/search/downward ipc policy-repair --dump-policy 2
This is a unit task.
./planner_prp/src/search/downward-release --heuristic "h=ff(cost_type=1)" --search "lazy_greedy([h],preferred=[h])" --random-seed 814102613 --dump-policy 2 < output
Simplifying transitions... done!
Variables: 25
Bytes per state: 8

Total allotted time (s): 1800
Max time for core JIC (remaining used in final-round repairs): 1800
Max time for each of the 1 epochs: 1800

 !! Warning: Disabling the simplification of unary operators !!
 !!           to keep the non-deterministic planning sound.  !!
Generated 1289 state(s).
Dead ends: 0 state(s). (0 recorded)
pick-tower_DETDUP_1 b4 b10 b2 (1)
put-down b10 (1)
pick-up_DETDUP_1 b2 b8 (1)
pick-up_DETDUP_0 b6 b9 (1)
put-on-block_DETDUP_0 b6 b2 (1)
pick-tower_DETDUP_1 b9 b1 b7 (1)
put-on-block_DETDUP_0 b1 b9 (1)
pick-tower_DETDUP_1 b11 b4 b10 (1)
put-on-block_DETDUP_0 b4 b6 (1)
pick-up-from-table_DETDUP_1 b5 (1)
put-on-block_DETDUP_0 b5 b1 (1)
pick-up-from-table_DETDUP_1 b8 (1)
put-on-block_DETDUP_0 b8 b5 (1)
pick-tower_DETDUP_1 b1 b9 b1 (1)
put-on-block_DETDUP_0 b9 b12 (1)
pick-tower_DETDUP_1 b3 b11 b4 (1)
put-on-block_DETDUP_0 b11 b8 (1)
pick-tower_DETDUP_1 b7 b3 b11 (1)
put-on-block_DETDUP_0 b3 b4 (1)
pick-up_DETDUP_0 b7 b3 (1)
put-on-block_DETDUP_0 b7 b10 (1)
Plan length: 21 step(s).
Plan cost: 21
Initial search time: 0.01s
Initial total time: 0.05s


Creating the simulator...


Regressing the plan...


Generating an initial policy...


Computing just-in-time repairs...
Generated 16 state(s).
Dead ends: 0 state(s).
Generated 17 state(s).
Dead ends: 0 state(s).
Generated 17 state(s).
Dead ends: 0 state(s).
Generated 17 state(s).
Dead ends: 0 state(s).
Generated 15 state(s).
Dead ends: 0 state(s).
Generated 14 state(s).
Dead ends: 0 state(s).
Generated 13 state(s).
Dead ends: 0 state(s).
Generated 11 state(s).
Dead ends: 0 state(s).

Could not close 0 of 8 open leaf states.
Investigated 59 states for the strong cyclic plan.
Went through another policy of score 1

Could not close 0 of 0 open leaf states.
Investigated 1 states for the strong cyclic plan.
Marking policy strong cyclic.
Went through another policy of score 1


Running a final SCD check...


Running the simulation...
...achieved the goal!



                  -{ General Statistics }-

        FSAP Combination Count: 0
       Monotonicity violations: 0
             Successful states: 48 +/- 0
                       Replans: 0 +/- 0
                       Actions: 48 +/- 0
             Recorded Deadends: 0
            State-Action Pairs: 30
  Forbidden State-Action Pairs: 0
               Strongly Cyclic: True
                  Policy Score: 1
                     Succeeded: 1 / 1
 Depth limit (of 1000) reached: 0 / 1


                  -{ Timing Statistics }-

        Regression Computation: 0s
         Engine Initialization: 0s
                   Search Time: 0.01s
           Policy Construction: 0.01s
 Evaluating the policy quality: 0.03s
              Using the policy: 0.01s
          Just-in-case Repairs: 0.05s
                Simulator time: 0s
                    Total time: 0.09s



Dumping the policy and fsaps...
Strong cyclic plan found.
Peak memory: 17804 KB

If holds: var13:12 var14:13 var16:13 var17:13 var19:9 var20:1 var21:5 var23:8 var24:4 var15:11 var2:0 var18:7 var5:0 var22:2 var9:0 var12:0
Execute: goal / SC / d=0

If holds: var1:0 var13:12 var14:13 var16:13 var17:13 var19:9 var20:1 var21:5 var23:8 var24:4 var15:11 var2:0 var18:7 var5:0 var22:0
Execute: put-on-block b7 b10 / SC / d=1

If holds: var1:0 var13:12 var14:13 var16:13 var17:13 var19:9 var20:1 var21:5 var23:8 var24:4 var15:11 var2:0 var18:7 var22:6 var9:0 var12:0
Execute: pick-up b7 b3 / SC / d=2

If holds: var1:0 var13:12 var14:13 var16:13 var17:13 var19:9 var20:1 var21:5 var23:8 var24:4 var15:11 var2:0 var18:7 var5:0 var22:13 var9:0 var12:0
Execute: pick-up-from-table b7 / SC / d=2

If holds: var1:0 var6:0 var13:12 var14:13 var16:13 var17:13 var19:9 var20:1 var21:5 var23:8 var24:4 var15:11 var2:0 var18:0 var22:6 var9:0
Execute: put-on-block b3 b4 / SC / d=3

If holds: var1:0 var6:0 var13:12 var14:13 var16:13 var17:13 var19:9 var20:1 var21:5 var23:8 var24:4 var15:11 var18:3 var22:6 var9:0 var12:0
Execute: pick-tower b7 b3 b11 / SC / d=4

If holds: var1:0 var6:0 var13:12 var14:13 var16:13 var17:13 var19:9 var20:1 var21:5 var23:8 var24:4 var15:11 var2:0 var18:13 var5:0 var22:6 var9:0 var12:0
Execute: pick-up-from-table b3 / SC / d=4

If holds: var1:0 var6:0 var10:0 var13:12 var14:13 var16:13 var17:13 var19:9 var20:1 var21:5 var23:8 var24:4 var15:0 var18:3 var22:6 var9:0
Execute: put-on-block b11 b8 / SC / d=5

If holds: var1:0 var10:0 var13:12 var14:13 var16:13 var17:13 var19:9 var20:1 var21:5 var23:8 var24:4 var15:7 var18:3 var22:6 var9:0 var12:0
Execute: pick-tower b3 b11 b4 / SC / d=6

If holds: var1:0 var6:0 var10:0 var13:12 var14:13 var16:13 var17:13 var19:9 var20:1 var21:5 var23:8 var24:4 var15:13 var2:0 var18:3 var22:6 var9:0 var12:0
Execute: pick-up-from-table b11 / SC / d=6

If holds: var1:0 var3:0 var10:0 var13:12 var14:13 var16:13 var17:13 var19:9 var20:1 var21:5 var23:8 var24:0 var15:7 var18:3 var22:6 var9:0
Execute: put-on-block b9 b12 / SC / d=7

If holds: var1:0 var3:0 var10:0 var13:12 var14:13 var16:13 var17:13 var19:9 var20:1 var21:5 var23:8 var24:1 var15:7 var18:3 var22:6 var9:0 var12:0
Execute: pick-tower b1 b9 b1 / SC / d=8

If holds: var1:0 var3:0 var10:0 var11:0 var13:12 var14:13 var16:13 var17:13 var19:9 var20:1 var21:5 var23:8 var24:13 var15:7 var18:3 var22:6 var9:0 var12:0
Execute: pick-up-from-table b9 / SC / d=8

If holds: var1:0 var3:0 var7:0 var13:12 var14:13 var16:13 var17:13 var19:9 var20:1 var21:5 var23:0 var24:1 var15:7 var18:3 var22:6 var9:0
Execute: put-on-block b8 b5 / SC / d=9

If holds: var1:0 var3:0 var7:0 var10:0 var13:12 var14:13 var16:13 var17:13 var19:9 var20:1 var21:5 var23:13 var24:1 var15:7 var18:3 var22:6 var9:0 var12:0
Execute: pick-up-from-table b8 / SC / d=10

If holds: var0:0 var1:0 var3:0 var10:0 var13:12 var14:13 var16:13 var17:13 var19:9 var20:0 var21:5 var23:13 var24:1 var15:7 var18:3 var22:6 var9:0
Execute: put-on-block b5 b1 / SC / d=11

If holds: var0:0 var1:0 var3:0 var7:0 var10:0 var13:12 var14:13 var16:13 var17:13 var19:9 var20:13 var21:5 var23:13 var24:1 var15:7 var18:3 var22:6 var9:0 var12:0
Execute: pick-up-from-table b5 / SC / d=12

If holds: var0:0 var1:0 var3:0 var7:0 var8:0 var10:0 var13:12 var14:13 var16:13 var17:13 var19:0 var20:13 var21:5 var23:13 var24:1 var15:7 var18:3 var22:6 var9:0
Execute: put-on-block b4 b6 / SC / d=13

If holds: var0:0 var3:0 var7:0 var8:0 var10:0 var13:12 var14:13 var16:13 var17:13 var19:2 var20:13 var21:5 var23:13 var24:1 var15:7 var18:3 var22:6 var9:0 var12:0
Execute: pick-tower b11 b4 b10 / SC / d=14

If holds: var0:0 var1:0 var3:0 var6:0 var7:0 var8:0 var10:0 var13:12 var14:13 var16:13 var17:13 var19:13 var20:13 var21:5 var23:13 var24:1 var15:7 var18:3 var22:6 var9:0 var12:0
Execute: pick-up-from-table b4 / SC / d=14

If holds: var3:0 var7:0 var8:0 var10:0 var11:0 var13:0 var14:13 var16:13 var17:13 var19:2 var20:13 var21:5 var23:13 var24:1 var15:7 var18:3 var22:6 var9:0
Execute: put-on-block b1 b9 / SC / d=15

If holds: var3:0 var7:0 var8:0 var10:0 var11:0 var13:10 var14:13 var16:13 var17:13 var19:2 var20:13 var21:5 var23:13 var24:1 var15:7 var18:3 var22:6 var12:0
Execute: pick-tower b9 b1 b7 / SC / d=16

If holds: var0:0 var3:0 var7:0 var8:0 var10:0 var11:0 var13:13 var14:13 var16:13 var17:13 var19:2 var20:13 var21:5 var23:13 var24:1 var15:7 var18:3 var22:6 var9:0 var12:0
Execute: pick-up-from-table b1 / SC / d=16

If holds: var3:0 var4:0 var7:0 var10:0 var11:0 var13:10 var14:13 var16:13 var17:13 var19:2 var20:13 var21:0 var23:13 var24:1 var15:7 var18:3 var22:6
Execute: put-on-block b6 b2 / SC / d=17

If holds: var3:0 var4:0 var7:0 var8:0 var10:0 var13:10 var14:13 var16:13 var17:13 var19:2 var20:13 var21:12 var23:13 var24:1 var15:7 var18:3 var22:6 var12:0
Execute: pick-up b6 b9 / SC / d=18

If holds: var3:0 var4:0 var7:0 var8:0 var10:0 var11:0 var13:10 var14:13 var16:13 var17:13 var19:2 var20:13 var21:13 var23:13 var24:1 var15:7 var18:3 var22:6 var12:0
Execute: pick-up-from-table b6 / SC / d=18

If holds: var3:0 var4:0 var7:0 var8:0 var13:10 var14:13 var16:13 var17:11 var19:2 var20:13 var21:12 var23:13 var24:1 var15:7 var18:3 var22:6 var12:0
Execute: pick-up b2 b8 / SC / d=19

If holds: var3:0 var7:0 var8:0 var10:0 var13:10 var14:13 var16:13 var17:0 var19:2 var20:13 var21:12 var23:13 var24:1 var15:7 var18:3 var22:6
Execute: put-down b2 / SC / d=19

If holds: var3:0 var4:0 var7:0 var8:0 var13:10 var14:0 var16:13 var17:11 var19:2 var20:13 var21:12 var23:13 var24:1 var15:7 var18:3 var22:6
Execute: put-down b10 / SC / d=20

If holds: var3:0 var7:0 var8:0 var13:10 var14:5 var16:13 var17:11 var19:2 var20:13 var21:12 var23:13 var24:1 var15:7 var18:3 var22:6 var12:0
Execute: pick-tower b4 b10 b2 / SC / d=21
